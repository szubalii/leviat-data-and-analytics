{
	"name": "update_edw_vw_BillingDocumentItem_axbi",
	"properties": {
		"content": {
			"query": "CREATE VIEW [edw].[vw_BillingDocumentItem_axbi]\nAS\nWITH\nCustInvoiceTrans_without_quotes AS(\n    SELECT\n        CASE\n            WHEN \n\t\t\t    LEFT(CIT.[ITEMID], 1) = '\"'\n\t\t\t    AND\n                RIGHT(CIT.[ITEMID], 1) <> '\"'\n            THEN\n\t\t\t    SUBSTRING(CIT.[ITEMID], 2, LEN(CIT.[ITEMID]))\n            WHEN\n\t\t\t    LEFT(CIT.[ITEMID], 1) = '\"'\n                AND\n                RIGHT(CIT.[ITEMID], 1) = '\"'\n            THEN\n\t\t\t    SUBSTRING(CIT.[ITEMID], 2, LEN(CIT.[ITEMID]) - 2)\n            WHEN\n\t\t\t    LEFT(CIT.[ITEMID], 1) <> '\"'\n                AND\n                RIGHT(CIT.[ITEMID], 1) = '\"'\n            THEN\n\t\t\t    SUBSTRING(CIT.[ITEMID], 1, LEN(CIT.[ITEMID]) - 1)\n            ELSE\n                CIT.[ITEMID]\n        END AS [ITEMID]\n    ,   CIT.[INVOICEID]\n    ,   CIT.[DATAAREAID]\n    ,   CIT.[CUSTOMERNO]\n    ,   CIT.[LINENUM]\n    ,   CIT.ACCOUNTINGDATE\n    ,   CIT.QTY\n    ,   CIT.[PRODUCTSALESLOCAL]\n    ,   CIT.[PRODUCTSALESEUR]\n    ,   CIT.[COSTAMOUNTLOCAL]\n    ,   CIT.[COSTAMOUNTEUR]\n    ,   CIT.[DELIVERYCOUNTRYID]\n    ,   CIT.[SALESID]\n    ,   CIT.[OTHERSALESLOCAL]\n    ,   CIT.[OTHERSALESEUR]\n    ,   CIT.[ALLOWANCESLOCAL]\n    ,   CIT.[ALLOWANCESEUR]\n    ,   CIT.[t_applicationId]\n    ,   CIT.[t_extractionDtm]\n    FROM    \n        [base_tx_ca_0_hlp].[CUSTINVOICETRANS] CIT\n),\nBillingDocumentItemBase_axbi AS (\n    SELECT \n        DA.[DATAAREAID]                                       AS [DataAreaID]\n    ,   [INVOICEID]                                           AS [BillingDocument]\n    ,   RIGHT('00000' + CAST(CAST(CITQ.[LINENUM] as INT)      AS VARCHAR(5)), 5) +\n            '0' collate Latin1_General_100_BIN2               AS [BillingDocumentItem]\n    ,   ''                                                    AS [ReturnItemProcessingType]\n    ,   DA.[LOCALCURRENCY]                                    AS [CurrencyIDLocal]\n    ,   'EUR'                                                 AS [CurrencyIDGroupEUR]\n    ,   Null                                                  AS [ExchangeRate]\n    ,   Null                                                  AS [SalesType]\n    ,   CITQ.ACCOUNTINGDATE                                   AS [BillingDocumentDate]\n    ,   NULL                                                  AS [DistributionChannelID]\n    ,   SINMT.[SAPProductID]                                  AS [Material]\n    ,   NULL                                                  AS LengthInMPer1\n    ,   NULL                                                  AS LengthInM\n    ,   NULL                                                  AS [PlantID]\n    ,   CAST(CITQ.[QTY] as DECIMAL(13, 3))                    AS [BillingQuantity]\n    ,   'ST' collate Latin1_General_100_BIN2                  AS [BillingQuantityUnitID]\n    ,   sum(CAST(CITQ.[PRODUCTSALESLOCAL] as DECIMAL(19, 6))) AS [NetAmountLocal]\n    ,   sum(CAST(CITQ.[PRODUCTSALESEUR] as DECIMAL(19, 6)))   AS [NetAmountGroupEUR]\n    ,   CITQ.[COSTAMOUNTLOCAL]                                AS [CostAmountLocal]\n    ,   CITQ.[COSTAMOUNTEUR]                                  AS [CostAmountGroupEUR]\n    ,   CAST(CITQ.QTY as DECIMAL(13, 3))                      AS [QuantitySold]\n    ,   [DELIVERYCOUNTRYID]                                   AS [CountryID]\n    ,   [SALESID]                                             AS [SalesDocumentID]\n    ,   CASE\n            WHEN\n                CT.[CUSTOMERPILLAR] = 'PRECAST'\n            THEN\n                '04'\n            WHEN\n                CT.[CUSTOMERPILLAR] = 'INDUSTRIAL'\n            THEN\n                '03'\n            WHEN\n                UPPER(CT.[CUSTOMERPILLAR]) = 'OTHER'\n            THEN\n                'ZZ'\n        END                                                         AS [CustomerGroupID]\n    ,   NUll                                                        AS [Postalcode]\n    ,   CITQ.[CUSTOMERNO]                                           AS [Customerno]\n    ,   NULL                                                        AS [Salesperson]\n    ,   NULL                                                        as [Projectno]\n    ,   NULL                                                        AS [Responsible]\n    ,   NULL                                                        AS [GlobalParentID]\n    ,   NULL                                                        AS [SalesOrderTypeID]\n\n    ,   sum(CAST(CITQ.[PRODUCTSALESLOCAL] as DECIMAL(19, 6)))       AS [FinNetAmountLOCAL]           -- FinNetAmount\n    ,   sum(CAST(CITQ.[PRODUCTSALESEUR] as DECIMAL(19, 6)))         AS [FinNetAmountEUR]             -- FinNetAmount\n    ,   sum(CAST(CITQ.[OTHERSALESLOCAL] as DECIMAL(19, 6)))         AS [FinNetAmountOtherSalesLOCAL] -- [FinNetAmountOtherSales]\n    ,   sum(CAST(CITQ.[OTHERSALESEUR] as DECIMAL(19, 6)))           AS [FinNetAmountOtherSalesEUR]   -- [FinNetAmountOtherSales]\n    ,   sum(CAST(CITQ.[OTHERSALESLOCAL] as DECIMAL(19, 6)))         AS [FinNetAmountServOtherLOCAL] -- [FinNetAmountServOther]\n    ,   sum(CAST(CITQ.[OTHERSALESEUR] as DECIMAL(19, 6)))           AS [FinNetAmountServOtherEUR]   -- [FinNetAmountServOther]    \n    ,   sum(CAST(CITQ.[ALLOWANCESLOCAL] as DECIMAL(19, 6)))         AS [FinNetAmountAllowancesLOCAL] --[FinNetAmountAllowances]\n    ,   sum(CAST(CITQ.[ALLOWANCESEUR] as DECIMAL(19, 6)))           AS [FinNetAmountAllowancesEUR]   --[FinNetAmountAllowances]\n    ,   sum(CAST(CITQ.[PRODUCTSALESLOCAL] as DECIMAL(19, 6))) +\n            sum(CAST(CITQ.[OTHERSALESLOCAL] as DECIMAL(19, 6))) +\n            sum(CAST(CITQ.[ALLOWANCESLOCAL] as DECIMAL(19, 6)))     AS [FinSales100LOCAL]\n    ,   sum(CAST(CITQ.[PRODUCTSALESEUR] as DECIMAL(19, 6))) +\n            sum(CAST(CITQ.[OTHERSALESEUR] as DECIMAL(19, 6))) +\n            sum(CAST(CITQ.[ALLOWANCESEUR] as DECIMAL(19, 6)))       AS [FinSales100EUR]\n    ,   [ACCOUNTINGDATE]                                            AS [AccountingDate]              --  (bookingdate of the invoice).\n    ,   CITQ.[DATAAREAID]                                           AS [axbi_DataAreaID]\n    ,   DA.[NAME]                                                   AS [axbi_DataAreaName]\n    ,   DA.[GROUP]                                                  AS [axbi_DataAreaGroup]\n    ,   CITQ.[ITEMID]                                               AS [axbi_MaterialID]\n    ,   CITQ.[CUSTOMERNO]                                           AS [axbi_CustomerID]\n    ,   CT.[INOUT]                                                  AS [InOutID]\n    ,   CITQ.[ITEMID]                                               AS [axbi_ItemNoCalc]\n    ,   DA.DATAAREAID2                                              AS [axbi_DataAreaID2]\n    ,   CITQ.[t_applicationId]                                      AS [t_applicationId]\n    ,   CITQ.[t_extractionDtm]                                      AS [t_extractionDtm]\n    FROM\n        CustInvoiceTrans_without_quotes CITQ\n    LEFT JOIN \n        [base_tx_ca_0_hlp].[DATAAREA] DA\n        ON\n            DA.[DATAAREAID2] = CITQ.DATAAREAID\n    LEFT JOIN \n        [base_tx_ca_0_hlp].[CUSTTABLE] CT\n        ON\n            CT.[ACCOUNTNUM] = CITQ.[CUSTOMERNO]\n            AND\n            CT.[DATAAREAID] = CITQ.[DATAAREAID]\n    LEFT JOIN\n        [edw].[dim_SAPItemNumberBasicMappingTable] AS SINMT\n        ON\n            CITQ.[ITEMID] = SINMT.[axbi_ItemNoCalc]\n            AND\n            SINMT.[Migrate] IN ('Y', 'D')\n            AND\n            UPPER(SINMT.[AXDataAreaId]) = UPPER(CITQ.[DATAAREAID])\n            AND\n            SINMT.[SAPProductID] IS NOT NULL\n\n    WHERE \n        DA.[GROUP] != 'HALFEN'\n    GROUP BY\n        DA.[DATAAREAID]\n    ,   [INVOICEID]\n    ,   [LINENUM]\n    ,   DA.[LOCALCURRENCY]\n    ,   ACCOUNTINGDATE\n    ,   SINMT.[SAPProductID]\n    ,   QTY\n    ,   [CUSTOMERNO]\n    ,   [DELIVERYCOUNTRYID]\n    ,   CT.[CUSTOMERPILLAR]\n    ,   CITQ.[DATAAREAID]\n    ,   DA.[NAME]\n    ,   DA.[GROUP]\n    ,   CITQ.[ITEMID]\n    ,   CITQ.[CUSTOMERNO]\n    ,   CT.[INOUT]\n    ,   SINMT.[AXItemnumber]\n    ,   CITQ.[t_applicationId]\n    ,   CITQ.[t_extractionDtm]\n    ,   CITQ.[SALESID]\n    ,   [COSTAMOUNTLOCAL]\n    ,   [COSTAMOUNTEUR]\n    ,   DA.[DATAAREAID2]\n\n    UNION ALL\n\n    select\n        FH.[Company]                                                        as [DataAreaID]\n    ,   FH.[Invoiceno] collate Latin1_General_100_BIN2                      as [BillingDocument]\n        --TODO check LPAD: LPAD is MySQL specific\n    ,   RIGHT('00000' + CAST(CAST(FH.[Posno] as INT) as VARCHAR(5)), 5) +\n        '0' collate Latin1_General_100_BIN2                                 as [BillingDocumentItem]\n    ,   case when FH.SalesType = 4 then 'X' else '' end                     as [ReturnItemProcessingType]\n    ,   FH.Currencylocal collate Latin1_General_100_BIN2                    as [CurrencyIDLocal]\n    ,   FH.CurrencyEUR collate Latin1_General_100_BIN2                      as [CurrencyIDGroupEUR]\n    ,   CAST(FH.[CurrencyRatelocaltoCRH1EUR] as DECIMAL(15, 6))             as [ExchangeRate]\n    ,   FH.SalesType                                                        as [SalesType]    --[SDDocumentCategoryID]\n    ,   CONVERT(DATE, FH.Invoicedate)                                       as [BillingDocumentDate]\n    ,   FH.Inside_Outside                                                   as [DistributionChannelID]\n    ,   SINMT.[SAPProductID]                                                AS [Material]\n    ,   FH.[LengthinMper1]                                                  AS [LengthInMPer1]\n    ,   FH.[LengthinM]                                                      AS [LengthInM]\n    ,   FH.[Originwarehouse]                                                AS [PlantID]\n    ,   CAST(FH.Invoicequantity as DECIMAL(13, 3))                          AS [BillingQuantity]\n    ,   'ST' collate Latin1_General_100_BIN2                                AS [BillingQuantityUnitID] --TODO check\n    ,   CAST(FH.Invoicedsaleslocal as DECIMAL(19, 6))                       AS [NetAmountLocal]\n    ,   CAST(FH.InvoicedsalesCRHEUR as DECIMAL(19, 6))                      AS [NetAmountGroupEUR]\n    ,   CAST(FH.ICPlocal as DECIMAL(19, 6))                                 AS [CostAmountLocal]\n    ,   CAST(FH.ICPCRHEUR as DECIMAL(19, 6))                                AS [CostAmountGroupEUR]\n    ,   CAST(FH.Invoicequantity as DECIMAL(13, 3))                          AS [QuantitySold]\n    ,   FH.[Country]                                                        AS [CountryID]\n    ,   FH.[Orderno]                                                        AS [SalesDocumentID]\n    ,   CASE\n            WHEN\n                DIM_CUST.[CustomerPillar] = 'PRECAST'\n            THEN\n                '04'\n            WHEN\n                DIM_CUST.[CustomerPillar] = 'INDUSTRIAL'\n            THEN\n                '03'\n            WHEN\n                UPPER(DIM_CUST.[CustomerPillar]) = 'OTHER'\n            THEN\n                'ZZ'\n        END                                                                 AS [CustomerGroupID]\n    ,   FH.[Postalcode]                                                     AS [Postalcode]            \n    ,   DA.DATAAREAID2 + '-' + FH.[Customerno]                              AS [Customerno]\n    ,   FH.[Salesperson]                                                    AS [Salesperson]\n    ,   FH.[Projectno]                                                      AS [Projectno]\n    ,   FH.Responsible                                                      AS [Responsible]\n    ,   case when trim(FH.Concern) = ''\n        then\n            NULL\n        else\n            FH.Concern\n        end                                                                 AS [GlobalParentID]\n    ,   SalesType                                                           AS [SalesOrderTypeID]\n    ,   [Invoicedsaleslocal]                                                AS [FinNetAmountLOCAL]\n    ,   [InvoicedsalesCRHEUR]                                               AS [FinNetAmountEUR]\n    ,   [Othersaleslocal]                                                   AS [FinNetAmountOtherSalesLOCAL]\n    ,   [OthersalesCRHEUR]                                                  AS [FinNetAmountOtherSalesEUR]\n    ,   [Othersaleslocal]                                                   AS [FinNetAmountServOtherLOCAL] -- [FinNetAmountServOther]\n    ,   [OthersalesCRHEUR]                                                  AS [FinNetAmountServOtherEUR]   -- [FinNetAmountServOther]\n    ,   [Allowanceslocal]                                                   AS [FinNetAmountAllowancesLOCAL]\n    ,   [AllowancesCRHEUR]                                                  AS [FinNetAmountAllowancesEUR]\n    ,   [Invoicedsaleslocal] + [Othersaleslocal] + [Allowanceslocal]        as [FinSales100LOCAL]\n    ,   [InvoicedsalesCRHEUR] + [OthersalesCRHEUR] + [AllowancesCRHEUR]     as [FinSales100EUR]\n    ,   [Accountingdate]                                                    AS [AccountingDate]\n    ,   FH.[Company]                                                        AS [axbi_DataAreaID]\n    ,   DA.[NAME]                                                           AS [axbi_DataAreaName]\n    ,   DA.[GROUP]                                                          AS [axbi_DataAreaGroup]\n    ,   'HALF-' + FH.[Itemno]                                               AS [axbi_MaterialID]\n    ,   DA.DATAAREAID2 + '-' + FH.[Customerno]                              AS [axbi_CustomerID]\n    ,   CT.[INOUT]                                                          AS [InOutID]\n    ,   'HALF-' + FH.[Itemno]                                               AS [axbi_ItemNoCalc]\n    ,   DA.DATAAREAID2                                                      AS [axbi_DataAreaID2] \n    ,   FH.[t_applicationId]                                                AS [t_applicationId]\n    ,   FH.[t_extractionDtm]                                                AS [t_extractionDtm]\n    FROM    \n        intm_axbi.vw_FACT_HGDAWA FH\n    LEFT JOIN \n        [base_tx_ca_0_hlp].[DATAAREA] DA\n        ON\n            DA.[DATAAREAID] = FH.[Company]\n    LEFT JOIN\n        intm_axbi.vw_DIM_CUSTOMER DIM_CUST\n        ON\n            DIM_CUST.[Customerno] = FH.[Customerno]\n            AND\n            DIM_CUST.[Company] = FH.[Company]\n    LEFT JOIN\n        [edw].[dim_SAPItemNumberBasicMappingTable] AS SINMT\n        ON\n            FH.[Itemno] = SINMT.[AXItemnumber]\n            AND\n            SINMT.[AXDataAreaId] = '0000'\n            AND\n            SINMT.[Migrate] IN ('Y', 'D')\n            AND\n            SINMT.SAPProductID IS NOT NULL\n    LEFT JOIN\n        [base_tx_ca_0_hlp].[CUSTTABLE] CT\n        ON\n            CT.[ACCOUNTNUM] = DA.[DATAAREAID2] + '-' + FH.[Customerno]\n),\nBillingDocumentItemBase_axbi_mapped AS (\n    SELECT\n        SubQ.[BillingDocument]\n    ,   SubQ.[BillingDocumentItem]\n    ,   SubQ.[ReturnItemProcessingType]\n    ,   SubQ.[DataAreaID]\n    ,   SubQ.[CurrencyIDLocal]\n    ,   SubQ.[CurrencyIDGroupEUR]\n    ,   SubQ.[ExchangeRate]\n    ,   CASE WHEN  \n                SubQ.[SalesType] = '3'\n            THEN \n                'C' \n            WHEN  \n                SubQ.[SalesType] = '4'\n            THEN \n                'H' \n            WHEN  \n                SubQ.[SalesType] = '110'\n            THEN \n                'C'\n            WHEN  \n                SubQ.[SalesType] = '101'\n            THEN    \n                CASE \n                    WHEN \n                        SubQ.[FinNetAmountEUR] > 0\n                    THEN  \n                        'L' \n                    WHEN \n                        SubQ.[FinNetAmountEUR] < 0\n                    THEN  \n                        'K' \n                    WHEN \n                        SubQ.[FinNetAmountEUR] = 0\n                    THEN  \n                        CASE \n                            WHEN \n                                SubQ.[FinNetAmountOtherSalesEUR] > 0\n                            THEN  \n                                'L'        \n                            WHEN \n                                SubQ.[FinNetAmountOtherSalesEUR] < 0\n                            THEN  \n                                'K' \n                            WHEN \n                                SubQ.[FinNetAmountOtherSalesEUR] = 0\n                            THEN \n                                CASE \n                                    WHEN \n                                        SubQ.[BillingQuantity] > 0\n                                    THEN \n                                        'L'\n                                    WHEN \n                                        SubQ.[BillingQuantity] <= 0\n                                    THEN \n                                        'K'   \n                                END\n                        END\n                END\n        END\n                       AS [SDDocumentCategoryID]\n\n    ,   SubQ.[BillingDocumentDate]\n    ,   CASE\n            WHEN\n                SO.target_SalesOrganizationID IS NOT NULL\n            THEN \n                SO.target_SalesOrganizationID \n            ELSE\n                [DataAreaID]\n        END AS [SalesOrganizationID]\n    ,   SubQ.[DistributionChannelID]\n    ,   CASE\n            WHEN\n                SubQ.[Material] IS NOT NULL\n            THEN\n                SubQ.[Material]\n            ELSE\n                axbi_ItemNoCalc\n        END AS [Material]\n    ,   SubQ.[LengthInMPer1]\n    ,   SubQ.[LengthInM]\n    ,   SubQ.[PlantID]\n    ,   SubQ.[BillingQuantity]\n    ,   SubQ.[BillingQuantityUnitID]\n    ,   SubQ.[NetAmountLocal]\n    ,   SubQ.[NetAmountGroupEUR]\n    ,   SubQ.[CostAmountLocal]\n    ,   SubQ.[CostAmountGroupEUR]\n    ,   SubQ.[QuantitySold]\n    ,   SubQ.[CountryID]\n    ,   SubQ.[SalesDocumentID]\n    ,   SubQ.[CustomerGroupID]\n    ,   SD.[SalesDistrictID]                                             AS [SalesDistrictID]\n    ,   DimCust.[CustomerID]                                             AS [SoldToParty]\n    ,   ESA.target_ExternalSalesAgentID                                  AS [ExternalSalesAgentID]\n    ,   RIGHT('0000000000' + CAST(MBP.target_XRefID as VARCHAR(10)), 10) AS [ProjectID]\n    ,   IBP.BusinessPartnerName                                          AS [Project]\n    ,   SE.target_SalesEmployeeID collate Latin1_General_100_BIN2        AS [SalesEmployeeID]\n    ,   SubQ.[GlobalParentID]\n    ,   CASE \n            WHEN  \n                SubQ.[SalesType] = '3'\n            THEN \n                'ZOR' \n            WHEN  \n                SubQ.[SalesType] = '4'\n            THEN \n                'RE' \n            WHEN  \n                SubQ.[SalesType] = '110'\n            THEN \n                'ZOR' \n            WHEN  \n                SubQ.[SalesType] = '101'\n            THEN  \n                CASE \n                    WHEN \n                        SubQ.[FinNetAmountEUR] > 0\n                    THEN  \n                        'ZDR' \n                    WHEN \n                        SubQ.[FinNetAmountEUR] < 0\n                    THEN  \n                        'ZCR' \n                    WHEN \n                        SubQ.[FinNetAmountEUR] = 0\n                    THEN \n                        CASE \n                            WHEN \n                                SubQ.[FinNetAmountOtherSalesEUR] > 0\n                            THEN  \n                                'ZDR'        \n                            WHEN \n                                SubQ.[FinNetAmountOtherSalesEUR] < 0\n                            THEN  \n                                'ZCR' \n                            WHEN \n                                SubQ.[FinNetAmountOtherSalesEUR] = 0\n                            THEN \n                                CASE \n                                    WHEN \n                                        SubQ.[BillingQuantity] > 0\n                                    THEN \n                                        'ZDR'\n                                    WHEN \n                                        SubQ.[BillingQuantity] <= 0\n                                    THEN \n                                        'ZCR'\n                                END\n                        END\n                END\n        END\n                       AS [SalesOrderTypeID]\n\n    ,   SubQ.[FinNetAmountLOCAL]\n    ,   SubQ.[FinNetAmountEUR]\n    ,   SubQ.[FinNetAmountOtherSalesLOCAL]\n    ,   SubQ.[FinNetAmountOtherSalesEUR]\n    ,   SubQ.[FinNetAmountServOtherLOCAL]\n    ,   SubQ.[FinNetAmountServOtherEUR]    \n    ,   SubQ.[FinNetAmountAllowancesLOCAL]\n    ,   SubQ.[FinNetAmountAllowancesEUR]\n    ,   SubQ.[FinSales100LOCAL]\n    ,   SubQ.[FinSales100EUR]\n    ,   SubQ.[AccountingDate]\n    ,   SubQ.[axbi_DataAreaID]\n    ,   SubQ.[axbi_DataAreaName]\n    ,   SubQ.[axbi_DataAreaGroup]\n    ,   SubQ.[axbi_MaterialID]\n    ,   SubQ.[axbi_CustomerID]\n    ,   CASE\n            WHEN \n                [Material] IS NOT NULL\n            THEN \n                SubQ.[Material]\n            ELSE \n                SubQ.[axbi_MaterialID]\n        END AS [MaterialCalculated]\n    ,   CASE \n            WHEN \n                SO.IsMigrated = 'Y'\n            THEN\n                CASE\n                    WHEN \n                        SCBMT.[SAPCustomeraccount] IS NOT NULL\n                    THEN \n                        DimCust.[CustomerID]\n                    ELSE \n                        SubQ.[axbi_CustomerID] \n                END\n            ELSE \n                SubQ.[axbi_CustomerID]\n        END AS [SoldToPartyCalculated]\n\n    ,   mapBrand.[BrandID]  AS [BrandID]\n    ,   mapBrand.[Brand]    AS [Brand]\n  --,   CT.[INOUT] AS [InOutID]\n    ,   SubQ.[InOutID]\n    ,   SubQ.[axbi_ItemNoCalc]\n    ,   SubQ.[axbi_DataAreaID2]\n    ,   SubQ.[t_applicationId]\n    ,   SubQ.[t_extractionDtm]\n\n    FROM \n        BillingDocumentItemBase_axbi as SubQ\n    LEFT JOIN\n        [map_AXBI].[SalesOrganization] AS SO\n        ON\n            SubQ.[DataAreaID] = source_DataAreaID \n            AND \n            [target_SalesOrganizationID] != 'TBD'        \n    LEFT JOIN\n        [base_ff].[SalesDistrict] SD \n        ON \n            SD.[CountryID] = SubQ.[CountryID] \n            AND\n            SD.[SalesOrganizationID] = SO.[target_SalesOrganizationID]\n            AND\n            SD.[ZipCodeFrom] = SubQ.[Postalcode]  \n            -- while we do not have data for Germany, we temporarily comment on these conditions \n            /*\n            -- for Germany,  range is used relative to the postcode fields ZipCodeFrom, ZipCodeTo \n            -- for other countries these values are equal\n            (\n                (\n                    SD.[CountryID] <> 'DE'\n                    AND\n                    SD.[ZipCodeFrom] = SubQ.[Postalcode]  \n                )\n                OR\n                (\n                    SD.[CountryID] = 'DE'\n                    AND\n                    (   \n                        SD.[ZipCodeFrom] >= SubQ.[Postalcode] \n                        AND \n                        SubQ.[Postalcode] <= SD.[ZipCodeTo]\n                    )\n                                                           \n                )\n            ) */\n    LEFT JOIN\n        [map_AXBI].[SalesEmployee] AS ESA\n        ON\n            SubQ.[Salesperson] = ESA.source_SalesPersonID\n    LEFT JOIN\n        [map_AXBI].[SalesEmployee] AS SE\n        ON\n            SubQ.[Responsible] = SE.source_SalesPersonID\n/*    LEFT JOIN\n        [map_AXBI].[SDDocumentCategory] AS SDDC\n        ON\n            SubQ.[SalesType] = SDDC.source_SalesTypeID\n    LEFT JOIN\n        [map_AXBI].[SalesDocumentType] AS SDT\n        ON\n            SubQ.[SalesType] = SDT.source_SalesTypeID */ -- Ksenia task 1505\n/*        LEFT JOIN\n        [map_AXBI].[Material] as mapMaterial\n        ON\n            -- SubQ.[DataAreaID] = upper(SINMT.[AXDataAreaId])\n            -- AND\n            SubQ.[Itemno] = mapMaterial.[source_Material] */\n    LEFT JOIN\n        [edw].[dim_SAPCustomerBasicMappingTable] SCBMT\n        ON\n            SubQ.[DataAreaID] = SCBMT.[AXDataAreaId]\n            AND\n            SubQ.[Customerno] = SCBMT.[AXCustomerCalculated]\n    LEFT JOIN\n        [edw].[dim_Customer] DimCust\n        ON\n            DimCust.[CustomerExternalID] = SCBMT.[SAPCustomeraccount]\n    LEFT JOIN \n        [map_AXBI].[BusinessPartner] MBP\n        ON\n            MBP.XRefType = 'PROJECTS-TO'\n            AND\n            -- Lookup the correct UDF Legacy ID and add as a prefix\n            CONCAT(\n                SO.[source_UDFLegacyID],\n                SubQ.[Projectno]\n            ) = MBP.source_XRefID\n\n    LEFT JOIN \n        [base_s4h_cax].[I_BusinessPartner] IBP\n        ON\n            IBP.BusinessPartner = RIGHT('0000000000'+CAST(MBP.target_XRefID collate Latin1_General_100_BIN2 as VARCHAR(10)),10)\n            -- AND\n            -- IBP.[MANDT] = 200 MPS 2021/11/03: commented out due to different client values between dev,qas, and prod\n    -- LEFT JOIN\n    --     [base_tx_ca_0_hlp].[CUSTTABLE] CT\n    --     ON\n    --         CT.[ACCOUNTNUM] = SubQ.[axbi_CustomerID]\n    --         AND\n    --         SubQ.[DataAreaID] = CT.[DATAAREAID]\n     LEFT JOIN\n        [map_AXBI].[Brand] mapBrand\n        ON\n        mapBrand.[source_DataAreaID]= SubQ.[axbi_DataAreaID]\n), BillingDocumentItemBase_axbi_mapped_calc as (\n    SELECT\n        CONCAT(TRIM(SubQ.[SalesOrganizationID]),'_',TRIM(SubQ.[BillingDocument]) COLLATE SQL_Latin1_General_CP1_CS_AS) AS [BillingDocument]\n    ,   SubQ.[BillingDocumentItem]\n    ,   SubQ.[ReturnItemProcessingType]\n    ,   SubQ.[DataAreaID]\n    ,   SubQ.[CurrencyIDLocal]\n    ,   SubQ.[CurrencyIDGroupEUR]\n    ,   SubQ.[ExchangeRate]\n    ,   SubQ.[SDDocumentCategoryID]\n    ,   SubQ.[BillingDocumentDate]\n    ,   SubQ.[SalesOrganizationID]\n    ,   SubQ.[DistributionChannelID]\n    ,   SubQ.[Material]\n    ,   SubQ.[LengthInMPer1]\n    ,   SubQ.[LengthInM]\n    ,   SubQ.[PlantID]\n    ,   SubQ.[BillingQuantity]\n    ,   SubQ.[BillingQuantityUnitID]\n    ,   SubQ.[NetAmountLocal]\n    ,   SubQ.[NetAmountGroupEUR]\n    ,   SubQ.[CostAmountLocal]\n    ,   SubQ.[CostAmountGroupEUR]\n    ,   SubQ.[QuantitySold]\n    ,   SubQ.[CountryID]\n    ,   SubQ.[SalesDocumentID]\n    ,   SubQ.[CustomerGroupID]\n    ,   SubQ.[SalesDistrictID]\n    ,   SubQ.[SoldToParty]\n    ,   SubQ.[ExternalSalesAgentID]\n    ,   SubQ.[ProjectID]\n    ,   SubQ.[Project]\n    ,   SubQ.[SalesEmployeeID]\n    ,   SubQ.[GlobalParentID]\n    ,   case when SubQ.[GlobalParentID] is null\n            then SubQ.[SoldToParty]\n            else SubQ.[GlobalParentID]\n        end                                                              AS [GlobalParentCalculatedID]\n    ,   case when SubQ.[GlobalParentID] is null -- task 1611\n            then DIM_CUST_S4H.[Customer]\n            else CustTb.[NAME]\n        end                                                              AS [GlobalParentCalculated]\n    ,   SubQ.[SoldToParty]                                               AS [LocalParentCalculatedID]\n    ,   DIM_CUST_S4H.[Customer]                                          AS [LocalParentCalculated]\n    ,   SubQ.[SalesOrderTypeID]\n    ,   SubQ.[FinNetAmountLOCAL]\n    ,   SubQ.[FinNetAmountEUR]\n    ,   SubQ.[FinNetAmountOtherSalesLOCAL]\n    ,   SubQ.[FinNetAmountOtherSalesEUR]\n    ,   SubQ.[FinNetAmountServOtherLOCAL]\n    ,   SubQ.[FinNetAmountServOtherEUR]  \n    ,   SubQ.[FinNetAmountAllowancesLOCAL]\n    ,   SubQ.[FinNetAmountAllowancesEUR]\n    ,   SubQ.[FinSales100LOCAL]\n    ,   SubQ.[FinSales100EUR]\n    ,   SubQ.[AccountingDate]\n    ,   SubQ.[axbi_DataAreaID]\n    ,   SubQ.[axbi_DataAreaName]\n    ,   SubQ.[axbi_DataAreaGroup]\n    ,   SubQ.[axbi_MaterialID]\n    ,   SubQ.[axbi_CustomerID]\n    ,   SubQ.[MaterialCalculated]\n    ,   SubQ.[SoldToPartyCalculated]\n    ,   SubQ.[BrandID]\n    ,   SubQ.[Brand]\n    ,   SubQ.[InOutID]\n    ,   SubQ.[axbi_ItemNoCalc]\n    ,   SubQ.[t_applicationId]\n    ,   SubQ.[t_extractionDtm]\n    FROM\n        BillingDocumentItemBase_axbi_mapped as SubQ\n        LEFT JOIN\n            [edw].[dim_Customer] DIM_CUST_S4H\n                on\n                    DIM_CUST_S4H.[CustomerID] = SubQ.[SoldToParty]\n\n        LEFT JOIN\n            [base_tx_ca_0_hlp].[CUSTTABLE] CustTb\n            ON\n                CustTb.[DATAAREAID] = SubQ.[axbi_DataAreaID2]\n                AND\n                CustTb.[ACCOUNTNUM] = SubQ.[axbi_DataAreaID2] + '-' + SubQ.[GlobalParentID]\n    WHERE \n        SubQ.[SalesOrganizationID] <> '5330' -- filtered out US data\n)\n/*\n    Add dummy generated records for invoices containing packaging or services\n    materials only.\n*/\n,BDIZZZDUMMY AS(   \n    SELECT\n        [BillingDocument]\n    ,   STUFF([BillingDocumentItem], 1, 1, 'Z') + '0' AS [BillingDocumentItem]\n    ,   [ReturnItemProcessingType]\n    ,   [DataAreaID]\n    ,   [CurrencyIDLocal]\n    ,   [CurrencyIDGroupEUR]\n    ,   [ExchangeRate]\n    ,   [SDDocumentCategoryID]\n    ,   [BillingDocumentDate]\n    ,   [SalesOrganizationID]\n    ,   [DistributionChannelID]\n    ,   'ZZZDUMMY01'                  AS [Material]\n    ,   NULL                          AS LengthInMPer1\n    ,   NULL                          AS LengthInM\n    ,   [PlantID]\n    ,   NULL                          AS [BillingQuantity]\n    ,   [BillingQuantityUnitID]\n    ,   [FinNetAmountOtherSalesLOCAL] AS [NetAmountLocal]\n    ,   [FinNetAmountOtherSalesEUR]   AS [NetAmountGroupEUR]\n    ,   NULL                          AS [CostAmountLocal]\n    ,   NULL                          AS [CostAmountGroupEUR]\n    ,   [QuantitySold]\n    ,   [CountryID]\n    ,   [SalesDocumentID]\n    ,   [CustomerGroupID]\n    ,   [SalesDistrictID]\n    ,   [SoldToParty]\n    ,   [ExternalSalesAgentID]\n    ,   [ProjectID]\n    ,   [Project]\n    ,   [SalesEmployeeID]\n    ,   [GlobalParentID]\n    ,   [GlobalParentCalculatedID]\n    ,   [GlobalParentCalculated]\n    ,   [LocalParentCalculatedID]\n    ,   [LocalParentCalculated]\n    ,   [SalesOrderTypeID]\n    ,   NULL AS [FinNetAmountLOCAL]\n    ,   NULL AS [FinNetAmountEUR]\n    ,   NULL AS [FinNetAmountOtherSalesLOCAL]\n    ,   NULL AS [FinNetAmountOtherSalesEUR]\n    ,   NULL AS [FinNetAmountServOtherLOCAL]\n    ,   NULL AS [FinNetAmountServOtherEUR]\n    ,   NULL AS [FinNetAmountAllowancesLOCAL]\n    ,   NULL AS [FinNetAmountAllowancesEUR]\n    ,   NULL AS [FinSales100LOCAL]\n    ,   NULL AS [FinSales100EUR]\n    ,   [AccountingDate]\n    ,   [axbi_DataAreaID]\n    ,   [axbi_DataAreaName]\n    ,   [axbi_DataAreaGroup]\n    ,   NULL AS [axbi_MaterialID]\n    ,   [axbi_CustomerID]\n    ,   'ZZZDUMMY01' AS [MaterialCalculated]\n    ,   [SoldToPartyCalculated]\n    ,   NULL AS [BrandID]\n    ,   NULL AS [Brand]\n    ,   [InOutID]\n    ,   [axbi_ItemNoCalc]\n    ,   [t_applicationId]\n    ,   [t_extractionDtm]\n    FROM\n        BillingDocumentItemBase_axbi_mapped_calc\n    WHERE \n        ISNULL ([FinNetAmountOtherSalesLOCAL], 0) != 0\n        OR\n        ISNULL ([FinNetAmountOtherSalesEUR], 0) != 0\n)\n,BDIAXBI_DUMMY AS (\n    SELECT *\n    FROM BillingDocumentItemBase_axbi_mapped_calc\n\n    UNION ALL \n\n    SELECT *\n    FROM BDIZZZDUMMY\n)\n,EuroBudgetExchangeRate AS (\n    SELECT \n        SourceCurrency\n    ,   ExchangeRateEffectiveDate\n    ,   ExchangeRate\n    FROM \n        edw.dim_ExchangeRates\n    WHERE \n        ExchangeRateType = 'ZAXBIBUD'\n        AND\n        TargetCurrency = 'EUR'\n)\n,EuroBudgetExchangeRateUSD as (\n    select\n         TargetCurrency\n        ,ExchangeRateEffectiveDate\n        ,ExchangeRate\n    from\n        edw.dim_ExchangeRates\n    where\n        ExchangeRateType = 'ZAXBIBUD'\n        AND\n        SourceCurrency = 'USD')\n, BDIAXBI_DUMMY_30 AS(\n    SELECT \n            [BillingDocument]\n        ,   [BillingDocumentItem]\n        ,   [ReturnItemProcessingType]\n        ,   CurrencyIDGroupEUR                       AS [CurrencyID]\n        ,   [ExchangeRate]\n        ,   [SDDocumentCategoryID]\n        ,   [BillingDocumentDate]\n        ,   [SalesOrganizationID]\n        ,   [DistributionChannelID]\n        ,   [Material]\n        ,   [LengthInMPer1]\n        ,   [LengthInM]\n        ,   [PlantID]\n        ,   [BillingQuantity]\n        ,   [BillingQuantityUnitID]\n        ,   [NetAmountGroupEUR]                      AS [NetAmount]\n        ,   [CostAmountGroupEUR]                     AS [CostAmount]\n        ,   [QuantitySold]\n        ,   [CountryID]\n        ,   [SalesDocumentID]\n        ,   [CustomerGroupID]\n        ,   [SalesDistrictID]\n        ,   [SoldToParty]\n        ,   [ExternalSalesAgentID]\n        ,   [ProjectID]\n        ,   [Project]\n        ,   [SalesEmployeeID]\n        ,   [GlobalParentID]\n        ,   [GlobalParentCalculatedID]\n        ,   [GlobalParentCalculated]\n        ,   [LocalParentCalculatedID]\n        ,   [LocalParentCalculated]\n        ,   [SalesOrderTypeID]\n        ,   COALESCE([FinNetAmountEUR], 0)           AS [FinNetAmountRealProduct]\n        ,   COALESCE([FinNetAmountOtherSalesEUR], 0) AS [FinNetAmountOtherSales]\n        ,   COALESCE([FinNetAmountServOtherEUR], 0)  AS [FinNetAmountServOther]        \n        ,   COALESCE([FinNetAmountAllowancesEUR], 0) AS [FinNetAmountAllowances]\n        ,   COALESCE([FinSales100EUR], 0)            AS [FinSales100]\n        ,   [AccountingDate]\n        ,   [axbi_DataAreaID]\n        ,   [axbi_DataAreaName]\n        ,   [axbi_DataAreaGroup]\n        ,   [axbi_MaterialID]\n        ,   [axbi_CustomerID]\n        ,   [MaterialCalculated]\n        ,   [SoldToPartyCalculated]\n        ,   [BrandID]\n        ,   [Brand]\n        ,   [InOutID]\n        ,   [axbi_ItemNoCalc]\n        ,   BDIAXBI_DUMMY.[t_applicationId]\n        ,   BDIAXBI_DUMMY.[t_extractionDtm]\n    FROM \n        BDIAXBI_DUMMY\n)\n,ExchangeRateUSD AS(\n    SELECT\n            [BillingDocument]\n        ,   [BillingDocumentItem]\n        ,   EuroBudgetExchangeRateUSD.[ExchangeRate] AS [ExchangeRate]\n    FROM\n        (SELECT\n                [BillingDocument]\n            ,   [BillingDocumentItem]\n            ,   [CurrencyID]\n            ,    MAX([ExchangeRateEffectiveDate]) AS [ExchangeRateEffectiveDate]\n        FROM \n            BDIAXBI_DUMMY_30 axbi_dummy_40\n        LEFT JOIN\n            EuroBudgetExchangeRateUSD\n            ON\n                axbi_dummy_40.[CurrencyID] = EuroBudgetExchangeRateUSD.TargetCurrency\n        WHERE\n            [ExchangeRateEffectiveDate] <= [BillingDocumentDate]\n        GROUP BY\n                [BillingDocument]\n            ,   [BillingDocumentItem]\n            ,   [CurrencyID]\n        ) axbiUSD\n    LEFT JOIN\n        EuroBudgetExchangeRateUSD\n        ON\n            axbiUSD.[CurrencyID] = EuroBudgetExchangeRateUSD.[TargetCurrency]\n            AND\n            axbiUSD.[ExchangeRateEffectiveDate] = EuroBudgetExchangeRateUSD.[ExchangeRateEffectiveDate]\n)\n/*\n    Local currency data from AX BI\n*/\n\nSELECT \n        [BillingDocument]\n    ,   [BillingDocumentItem]\n    ,   [ReturnItemProcessingType]\n    ,   CT.[CurrencyTypeID]                      as [CurrencyTypeID]\n    ,   CT.[CurrencyType]                        as [CurrencyType]\n    ,   CurrencyIDLocal                          as [CurrencyID]\n    ,   1.0                                      as [ExchangeRate]\n    ,   [SDDocumentCategoryID]\n    ,   [BillingDocumentDate]\n    ,   [SalesOrganizationID]\n    ,   [DistributionChannelID]\n    ,   [Material]\n    ,   [LengthInMPer1]\n    ,   [LengthInM]\n    ,   [PlantID]\n    ,   [BillingQuantity]\n    ,   [BillingQuantityUnitID]\n    ,   [NetAmountLocal]                         as [NetAmount]\n    ,   [CostAmountLocal]                        as [CostAmount]\n    ,   [QuantitySold]\n    ,   [CountryID]\n    ,   [SalesDocumentID]\n    ,   [CustomerGroupID]\n    ,   [SalesDistrictID]\n    ,   [SoldToParty]\n    ,   [ExternalSalesAgentID]\n    ,   [ProjectID]\n    ,   [Project]\n    ,   [SalesEmployeeID]\n    ,   [GlobalParentID]\n    ,   [GlobalParentCalculatedID]\n    ,   [GlobalParentCalculated]\n    ,   [LocalParentCalculatedID]\n    ,   [LocalParentCalculated]\n    ,   [SalesOrderTypeID]\n    ,   COALESCE([FinNetAmountLOCAL], 0)           AS [FinNetAmountRealProduct]\n    ,   COALESCE([FinNetAmountOtherSalesLOCAL], 0) AS [FinNetAmountOtherSales]\n    ,   COALESCE([FinNetAmountServOtherLOCAL], 0)  AS [FinNetAmountServOther]\n    ,   COALESCE([FinNetAmountAllowancesLOCAL], 0) AS [FinNetAmountAllowances]\n    ,   COALESCE([FinSales100LOCAL], 0)            AS [FinSales100]\n    ,   [AccountingDate]\n    ,   [axbi_DataAreaID]\n    ,   [axbi_DataAreaName]\n    ,   [axbi_DataAreaGroup]\n    ,   [axbi_MaterialID]\n    ,   [axbi_CustomerID]\n    ,   [MaterialCalculated]\n    ,   [SoldToPartyCalculated]\n    ,   [BrandID]\n    ,   [Brand]\n    ,   [InOutID]\n    ,   [axbi_ItemNoCalc]\n    ,   BDIAXBI_DUMMY.[t_applicationId]\n    ,   BDIAXBI_DUMMY.[t_extractionDtm]\nFROM \n    BDIAXBI_DUMMY\nCROSS JOIN\n    [edw].[dim_CurrencyType] CT\nWHERE\n    CT.[CurrencyTypeID] = '10'\n\nUNION ALL\n\n/*\n    Euro currency data from AX BI\n*/\n\nSELECT \n        [BillingDocument]\n    ,   [BillingDocumentItem]\n    ,   [ReturnItemProcessingType]\n    ,   CT.[CurrencyTypeID]                      AS [CurrencyTypeID]\n    ,   CT.[CurrencyType]                        AS [CurrencyType]\n    ,   [CurrencyID]\n    ,   [ExchangeRate]\n    ,   [SDDocumentCategoryID]\n    ,   [BillingDocumentDate]\n    ,   [SalesOrganizationID]\n    ,   [DistributionChannelID]\n    ,   [Material]\n    ,   [LengthInMPer1]\n    ,   [LengthInM]\n    ,   [PlantID]\n    ,   [BillingQuantity]\n    ,   [BillingQuantityUnitID]\n    ,   [NetAmount]\n    ,   [CostAmount]\n    ,   [QuantitySold]\n    ,   [CountryID]\n    ,   [SalesDocumentID]\n    ,   [CustomerGroupID]\n    ,   [SalesDistrictID]\n    ,   [SoldToParty]\n    ,   [ExternalSalesAgentID]\n    ,   [ProjectID]\n    ,   [Project]\n    ,   [SalesEmployeeID]\n    ,   [GlobalParentID]\n    ,   [GlobalParentCalculatedID]\n    ,   [GlobalParentCalculated]\n    ,   [LocalParentCalculatedID]\n    ,   [LocalParentCalculated]\n    ,   [SalesOrderTypeID]\n    ,   [FinNetAmountRealProduct]\n    ,   [FinNetAmountOtherSales]    \n    ,   [FinNetAmountServOther]\n    ,   [FinNetAmountAllowances]\n    ,   [FinSales100]\n    ,   [AccountingDate]\n    ,   [axbi_DataAreaID]\n    ,   [axbi_DataAreaName]\n    ,   [axbi_DataAreaGroup]\n    ,   [axbi_MaterialID]\n    ,   [axbi_CustomerID]\n    ,   [MaterialCalculated]\n    ,   [SoldToPartyCalculated]\n    ,   [BrandID]\n    ,   [Brand]\n    ,   [InOutID]\n    ,   [axbi_ItemNoCalc]\n    ,   BDIAXBI_DUMMY_30.[t_applicationId]\n    ,   BDIAXBI_DUMMY_30.[t_extractionDtm]\nFROM \n    BDIAXBI_DUMMY_30\nCROSS JOIN\n    [edw].[dim_CurrencyType] CT\nWHERE\n    CT.[CurrencyTypeID] = '30'\n\nUNION ALL\n\nSELECT \n        ExchangeRateUSD.[BillingDocument]\n    ,   ExchangeRateUSD.[BillingDocumentItem]\n    ,   [ReturnItemProcessingType]\n    ,   CT.[CurrencyTypeID]                      AS [CurrencyTypeID]\n    ,   CT.[CurrencyType]                        AS [CurrencyType]\n    ,   'USD'                                    AS [CurrencyID]\n    ,   1/ExchangeRateUSD.[ExchangeRate] AS [ExchangeRate]\n    ,   [SDDocumentCategoryID]\n    ,   [BillingDocumentDate]\n    ,   [SalesOrganizationID]\n    ,   [DistributionChannelID]\n    ,   [Material]\n    ,   [LengthInMPer1]\n    ,   [LengthInM]\n    ,   [PlantID]\n    ,   [BillingQuantity]\n    ,   [BillingQuantityUnitID]\n    ,   [NetAmount]*(1/ExchangeRateUSD.[ExchangeRate]) AS [NetAmount]\n    ,   [CostAmount]*(1/ExchangeRateUSD.[ExchangeRate]) AS [CostAmount]\n    ,   [QuantitySold]\n    ,   [CountryID]\n    ,   [SalesDocumentID]\n    ,   [CustomerGroupID]\n    ,   [SalesDistrictID]\n    ,   [SoldToParty]\n    ,   [ExternalSalesAgentID]\n    ,   [ProjectID]\n    ,   [Project]\n    ,   [SalesEmployeeID]\n    ,   [GlobalParentID]\n    ,   [GlobalParentCalculatedID]\n    ,   [GlobalParentCalculated]\n    ,   [LocalParentCalculatedID]\n    ,   [LocalParentCalculated]\n    ,   [SalesOrderTypeID]\n    ,   [FinNetAmountRealProduct]*(1/ExchangeRateUSD.[ExchangeRate]) AS [FinNetAmountRealProduct]\n    ,   [FinNetAmountOtherSales]*(1/ExchangeRateUSD.[ExchangeRate]) AS [FinNetAmountOtherSales]\n    ,   [FinNetAmountServOther]*(1/ExchangeRateUSD.[ExchangeRate]) AS [FinNetAmountServOther]  \n    ,   [FinNetAmountAllowances]*(1/ExchangeRateUSD.[ExchangeRate]) AS [FinNetAmountAllowances]\n    ,   [FinSales100]*(1/ExchangeRateUSD.[ExchangeRate]) AS [FinSales100]\n    ,   [AccountingDate]\n    ,   [axbi_DataAreaID]\n    ,   [axbi_DataAreaName]\n    ,   [axbi_DataAreaGroup]\n    ,   [axbi_MaterialID]\n    ,   [axbi_CustomerID]\n    ,   [MaterialCalculated]\n    ,   [SoldToPartyCalculated]\n    ,   [BrandID]\n    ,   [Brand]\n    ,   [InOutID]\n    ,   [axbi_ItemNoCalc]\n    ,   BDIAXBI_DUMMY_30.[t_applicationId]\n    ,   BDIAXBI_DUMMY_30.[t_extractionDtm]\nFROM \n    ExchangeRateUSD\nLEFT JOIN\n    BDIAXBI_DUMMY_30\n    ON \n        BDIAXBI_DUMMY_30.BillingDocument=ExchangeRateUSD.BillingDocument \n        AND     \n        BDIAXBI_DUMMY_30.BillingDocumentItem=ExchangeRateUSD.BillingDocumentItem  \nCROSS JOIN\n    [edw].[dim_CurrencyType] CT\nWHERE\n    CT.[CurrencyTypeID] = '40'\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "sqlserverless",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}