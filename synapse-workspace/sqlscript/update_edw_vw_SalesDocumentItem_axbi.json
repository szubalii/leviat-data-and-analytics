{
	"name": "update_edw_vw_SalesDocumentItem_axbi",
	"properties": {
		"content": {
			"query": "CREATE VIEW [edw].[vw_SalesDocumentItem_axbi]\nAS\n\nWITH\nSalesDocumentItem_Filtered_Out_Organization AS\n(\n    SELECT\n        FSL_DOC.[SALESID]                                                AS [SalesDocument]\n    ,   FSL_DOC.[INVENTTRANSID] collate Latin1_General_100_BIN2          AS [SalesDocumentItem]\n    ,   FSL_DOC.[adm_CompCurrency]                                       AS [CurrencyID]\n    ,   FSL_DOC.[RETURNREASONCODEID]\n    ,   FSL_DOC.[SALESQTY]                                               AS [OrderQuantity]  \n    ,   CAST(FSL_DOC.[CREATEDDATETIME] AS date)                          AS [CreationDate]\n    ,   CAST(FSL_DOC.[CREATEDDATETIME] AS time(0))                       AS [CreationTime]\n    ,   FSL_DOC.[LineAmount_EUR_Createddatetime]                         AS [LineAmount_EUR_Createddatetime]\n    ,   FSL_DOC.[LineAmount_MST_TransDate]                               AS [LineAmount_MST_TransDate]\n    ,   FSL_DOC.[MarginValue]                                            AS [Margin_LOCAL]\n    ,   FSL_DOC.[SHIPPINGDATEREQUESTED]                                  AS [RequestedDeliveryDate]\n    ,   CASE \n        when SO.target_SalesOrganizationID is not null \n            then SO.target_SalesOrganizationID \n        else \n            FSL_DOC.[DATAAREAID] \n        end                                                              AS [SalesOrganizationID]\n    ,   FSL_DOC.[CURRENCYCODE]                                           AS [CURRENCYCODE]\n    ,   FSL_DOC.t_applicationId                                          AS [t_applicationId]\n    ,   FSL_DOC.t_extractionDtm                                          AS [t_extractionDtm]\n    ,   FSL_DOC.[SALESGROUP]\n    ,   FSL_DOC.[SALESTYPE]\n    ,   FSL_DOC.[DATAAREAID]\n    ,   FSL_DOC.[CUSTACCOUNT]\n    ,   FSL_DOC.[INVOICEAACOUNT]\n    ,   FSL_DOC.[SalesTaker]\n    ,   FSL_DOC.[SALESID]\n    ,   FSL_DOC.[ITEMID]\n    ,   CT.[INOUT]                                                       AS [InOutID]     \n    FROM intm_axbi.vw_FACT_SALESLINE FSL_DOC\n    LEFT JOIN\n        [map_AXBI].[SalesOrganization] AS SO\n        ON\n            FSL_DOC.[DATAAREAID] = source_DataAreaID\n    LEFT JOIN\n        [base_tx_ca_0_hlp].[DATAAREA] DA\n        ON\n           FSL_DOC.[DATAAREAID] = DA.[DATAAREAID]\n    LEFT JOIN\n        [base_tx_ca_0_hlp].[CUSTTABLE] CT\n        ON\n            CT.ACCOUNTNUM = DA.[DATAAREAID2] + '-' + FSL_DOC.CUSTACCOUNT\n    WHERE\n        (\n            (\n            SO.source_DataAreaID in ('ASCH', 'ANCH', '5313', 'anat', 'anch', 'ANAT', 'ASS', '5311', 'ass') \n            AND\n            CAST(FSL_DOC.[CREATEDDATETIME] AS date)  < CAST('2021-10-01' as date)\n            ) \n            OR\n            (\n            SO.source_DataAreaID not in ('ASCH', 'ANCH', '5313', 'anat', 'anch', 'ANAT', 'ASS', '5311', 'ass') \n            AND\n            1=1\n            )\n        )\n        AND\n        SO.source_DataAreaID  <> '5330'\n),\nSalesDocumentItem_axbi_mapping AS (\n    SELECT \n        SDIOrg.[SalesDocument]\n    ,   SDIOrg.[SalesDocumentItem]\n    ,   SDIOrg.[CurrencyID]\n    ,   case when SDIOrg.[LineAmount_MST_TransDate] != 0\n             then cast(SDIOrg.[LineAmount_EUR_Createddatetime] / SDIOrg.[LineAmount_MST_TransDate] AS DECIMAL(15, 6))\n             else 0\n        end                                                              AS [ExchangeRate]\n    ,   CASE \n            WHEN  \n                SDIOrg.SALESTYPE = '3'\n            THEN \n                'C'\n            WHEN  \n                SDIOrg.SALESTYPE = '4'\n            THEN \n                'H' \n            WHEN  \n                SDIOrg.SALESTYPE = '101'\n            THEN \n                'C' \n            WHEN  \n                SDIOrg.SALESTYPE = '110'\n            THEN    \n                CASE \n                    WHEN \n                        SDIOrg.[LineAmount_MST_TransDate] > 0\n                    THEN  \n                        'L' \n                    WHEN \n                        SDIOrg.[LineAmount_MST_TransDate] < 0\n                    THEN  \n                        'K' \n                    WHEN \n                        SDIOrg.[LineAmount_MST_TransDate] = 0\n                    THEN    \n                        Case \n                            WHEN \n                                SDIOrg.[OrderQuantity] > 0\n                            THEN  \n                                'L'   \n                            WHEN \n                                SDIOrg.[OrderQuantity] < 0\n                            THEN  \n                                'K' \n                        END\n                END\n        END\n                                                        AS [SDDocumentCategoryID]\n    ,   CASE \n            WHEN  \n                SDIOrg.SALESTYPE = '3'\n            THEN \n                'ZOR' \n            WHEN  \n                SDIOrg.SALESTYPE = '4'\n            THEN \n                'RE' \n            WHEN  \n                SDIOrg.SALESTYPE = '101'\n            THEN \n                'ZOR' \n            WHEN  \n                SDIOrg.SALESTYPE = '110'\n            THEN    \n                CASE \n                    WHEN \n                        SDIOrg.[LineAmount_MST_TransDate] > 0\n                    THEN  \n                        'ZDR' \n                    WHEN \n                        SDIOrg.[LineAmount_MST_TransDate] < 0\n                    THEN  \n                        'ZCR'  \n                    WHEN \n                        SDIOrg.[LineAmount_MST_TransDate] = 0\n                    THEN    \n                        Case \n                            WHEN \n                                SDIOrg.[OrderQuantity] > 0\n                            THEN  \n                                'ZDR'        \n                            WHEN \n                                SDIOrg.[OrderQuantity] < 0\n                            THEN  \n                                'ZCR' \n                        END\n                END\n        END\n                        AS [SalesDocumentTypeID] \n    ,   case\n            when SDIOrg.[RETURNREASONCODEID] != '' and SDIOrg.[RETURNREASONCODEID] is not null\n            then 'X'\n            else ''\n        end                                                              AS [IsReturnsItemID]\n    ,   SDIOrg.[CreationDate]\n    ,   SDIOrg.[CreationTime]\n    -- ,   RIGHT('000000000000000000' + mapMaterial.[target_Material], 18)  AS [MaterialID]\n    ,   CASE\n            WHEN\n                SINMT.[SAPProductID] IS NOT NULL\n            THEN\n                SINMT.[SAPProductID]\n            ELSE\n                ITEMID\n        END AS [MaterialID]   \n    ,   mapBrand.[BrandID]                                               AS [BrandID]\n    ,   mapBrand.[Brand]                                                 AS [Brand]\n    ,   DimCustSold.[CustomerID]                                         AS [SoldToPartyID]\n    ,   DimCustBill.[CustomerID]                                         AS [BillToPartyID]\n    ,   SDIOrg.[OrderQuantity]\n    ,   CASE\n            WHEN\n                DIM_CUST.[CustomerPillar] = 'PRECAST'\n            THEN\n                '04'\n            WHEN\n                DIM_CUST.[CustomerPillar] = 'INDUSTRIAL'\n            THEN\n                '03'\n            WHEN\n                UPPER(DIM_CUST.[CustomerPillar]) = 'OTHER'\n            THEN\n                'ZZ'\n        END                                                                 AS [CustomerGroupID]\n    ,   SDIOrg.[LineAmount_EUR_Createddatetime]\n    ,   SDIOrg.[LineAmount_MST_TransDate]\n    ,   SDIOrg.[Margin_LOCAL]\n    ,   SDIOrg.[RequestedDeliveryDate]\n    ,   esa.target_ExternalSalesAgentID                                  AS [ExternalSalesAgentID]\n    ,   se.target_SalesEmployeeID                                        AS [SalesEmployeeID]\n    -- Make sure the target XRefID value from the mapping is prefixed with zero's to total length of 10 chars\n    ,   RIGHT('0000000000'+CAST(mbp.target_XRefID AS VARCHAR(10)),10)    AS [ProjectID]\n    ,   ibp.BusinessPartnerName                                          AS [Project]\n    ,   SDIOrg.[SalesOrganizationID]\n    ,   SDIOrg.[CURRENCYCODE]\n    ,   SDIOrg.[InOutID]\n    ,   SD.[SalesDistrictID]                                             AS [SalesDistrictID]\n    ,   SDIOrg.[t_applicationId]\n    ,   SDIOrg.[t_extractionDtm]\n    FROM SalesDocumentItem_Filtered_Out_Organization SDIOrg\n    LEFT JOIN [map_AXBI].[SalesEmployee] esa\n        ON \n            esa.source_SalesPersonID = SDIOrg.[SALESGROUP]\n    \n/*    LEFT JOIN [map_AXBI].[SDDocumentCategory] AS SDDC\n        ON \n            SDIOrg.SALESTYPE = SDDC.source_SalesTypeID\n    \n    LEFT JOIN [map_AXBI].[SalesDocumentType] AS SDT\n        ON \n            SDIOrg.SALESTYPE = SDT.source_SalesTypeID */ --Ksenia task 1505\n    \n    LEFT JOIN [edw].[dim_SAPCustomerBasicMappingTable] AS SapCBMTSold\n        ON \n            UPPER(SapCBMTSold.[AXDataAreaId]) = SDIOrg.[DATAAREAID]\n            and\n            SapCBMTSold.[AXCustomeraccount] = SDIOrg.[CUSTACCOUNT]\n    LEFT JOIN\n        [edw].[dim_Customer] DimCustSold\n        ON\n            DimCustSold.[CustomerExternalID] = SapCBMTSold.[SAPCustomeraccount]\n\n    LEFT JOIN [edw].[dim_SAPCustomerBasicMappingTable] AS SapCBMTBill\n        ON \n            UPPER(SapCBMTBill.[AXDataAreaId]) = SDIOrg.[DATAAREAID]\n            and\n            SapCBMTBill.[AXCustomeraccount] = SDIOrg.[INVOICEAACOUNT]\n    LEFT JOIN\n        [edw].[dim_Customer] DimCustBill\n        ON\n            DimCustBill.[CustomerExternalID] = SapCBMTBill.[SAPCustomeraccount]\n    \n    -- LEFT JOIN [map_AXBI].[Material] AS mapMaterial\n    --     ON\n    --         -- SapINBMTMat.[AXDataAreaId] = FSL_DOC.[DATAAREAID]\n    --         -- AND\n    --         mapMaterial.[source_Material] = FSL_DOC.[ITEMID]\n\n    LEFT JOIN\n        [edw].[dim_SAPItemNumberBasicMappingTable] AS SINMT\n        ON\n            SDIOrg.[ITEMID] = SINMT.[AXItemnumber]\n            AND\n            SINMT.[AXDataAreaId] = '0000'\n            AND\n            SINMT.[Migrate] IN ('Y', 'D')\n            AND\n            SINMT.SAPProductID IS NOT NULL\n    LEFT JOIN \n        [map_AXBI].[SalesEmployee] se\n        ON \n            se.source_SalesPersonID = SDIOrg.[SalesTaker]\n\n    LEFT JOIN \n        intm_axbi.vw_FACT_SALESTABLE fst\n        ON\n            SDIOrg.[SALESID] = fst.[SALESID]\n\n    LEFT JOIN\n        [base_ff].[SalesDistrict] SD \n        ON \n        SDIOrg.[SalesOrganizationID] = SD.[SalesOrganizationID]\n        AND\n        fst.[DELIVERYCOUNTRYREGIONID] = SD.[CountryID]\n        AND\n        SD.[ZipCodeFrom] = fst.[DELIVERYZIPCODE]\n        /*\n        -- for Germany,  range is used relative to the postcode fields ZipCodeFrom, ZipCodeTo \n        -- for other countries these values are equal        \n        (\n            (\n                SD.[CountryID] <> 'DE'\n                AND\n                SD.[ZipCodeFrom] = fst.[DELIVERYZIPCODE]  \n            )\n            OR\n            (\n                SD.[CountryID] = 'DE'\n                AND\n                (   \n                    SD.[ZipCodeFrom] >= fst.[DELIVERYZIPCODE] \n                    AND \n                    fst.[DELIVERYZIPCODE] <= SD.[ZipCodeTo]\n                )                                                        \n            )\n        ) */       \n    LEFT JOIN \n        [map_AXBI].[SalesOrganization] mso\n        ON\n            fst.[DATAAREAID] = mso.[source_DataAreaID]\n\n    LEFT JOIN \n        [map_AXBI].[BusinessPartner] mbp\n        ON\n            XRefType = 'PROJECTS-TO'\n            AND\n            -- Lookup the correct UDF Legacy ID and add AS a prefix \n            CONCAT(\n                mso.[source_UDFLegacyID],\n                fst.[HPLCUSTOMEROBJECTID]\n            ) = mbp.source_XRefID\n\n    LEFT JOIN \n        [base_s4h_cax].[I_BusinessPartner] ibp \n        ON \n            ibp.BusinessPartner = RIGHT('0000000000'+CAST(mbp.target_XRefID collate Latin1_General_100_BIN2 AS VARCHAR(10)),10)\n            -- AND \n            -- ibp.[MANDT] = 200 MPS 2021/11/01: commented out due to different client values between dev,qas, and prod\n    LEFT JOIN \n        intm_axbi.vw_DIM_CUSTOMER DIM_CUST\n        ON \n            DIM_CUST.[Customerno] = SDIOrg.[CUSTACCOUNT]\n            AND\n            DIM_CUST.[Company] = SDIOrg.[DATAAREAID]\n     LEFT JOIN\n        [map_AXBI].[Brand] mapBrand\n        ON\n        mapBrand.[source_DataAreaID]=SDIOrg.[DATAAREAID]\n            \n), \nsubCalculationMargin AS (\n    SELECT\n        SDIaxbi.[SalesDocument]\n    ,   SDIaxbi.[SalesDocumentItem]\n    ,   SDIaxbi.[CurrencyID]\n    ,   SDIaxbi.[ExchangeRate]\n    ,   SDIaxbi.[SDDocumentCategoryID]\n    ,   SDIaxbi.[SalesDocumentTypeID]\n    ,   SDIaxbi.[IsReturnsItemID]\n    ,   SDIaxbi.[CreationDate]\n    ,   SDIaxbi.[CreationTime]\n    ,   SDIaxbi.[MaterialID]\n    ,   SDIaxbi.[BrandID]\n    ,   SDIaxbi.[Brand]\n    ,   SDIaxbi.[SoldToPartyID]\n    ,   SDIaxbi.[BillToPartyID]\n    ,   SDIaxbi.[OrderQuantity]\n    ,   SDIaxbi.[CustomerGroupID]\n    ,   SDIaxbi.[SoldToPartyID]                  AS [GlobalParentCalculatedID]\n    ,   DIM_CUST_S4H.[Customer]                  AS [GlobalParentCalculated]\n    ,   SDIaxbi.[SoldToPartyID]                  AS [LocalParentCalculatedID]\n    ,   DIM_CUST_S4H.[Customer]                  AS [LocalParentCalculated]\n    ,   SDIaxbi.[LineAmount_MST_TransDate]       AS [NetAmount_LOCAL]\n    ,   SDIaxbi.[LineAmount_EUR_Createddatetime] AS [NetAmount_EUR]\n    ,   CASE\n            WHEN\n                SDIaxbi.[CurrencyID] = 'EUR'\n            THEN \n                SDIaxbi.[Margin_LOCAL]\n            ELSE \n                SDIaxbi.[ExchangeRate] * SDIaxbi.[Margin_LOCAL]\n        END AS [Margin_EUR]\n    ,   SDIaxbi.[Margin_LOCAL]\n    ,   SDIaxbi.[CURRENCYCODE]\n    ,   SDIaxbi.[RequestedDeliveryDate]\n    ,   SDIaxbi.[ExternalSalesAgentID]\n    ,   SDIaxbi.[SalesEmployeeID]\n    ,   SDIaxbi.[ProjectID]\n    ,   SDIaxbi.[Project]\n    ,   SDIaxbi.[SalesOrganizationID]\n    ,   SDIaxbi.[InOutID]\n    ,   SDIaxbi.[SalesDistrictID]\n    ,   SDIaxbi.[t_applicationId]\n    ,   SDIaxbi.[t_extractionDtm]\n    FROM    \n        SalesDocumentItem_axbi_mapping SDIaxbi\n    LEFT JOIN\n        [edw].[dim_Customer] DIM_CUST_S4H\n            on\n                DIM_CUST_S4H.[CustomerID] = SDIaxbi.[SoldToPartyID]\n),\nEuroBudgetExchangeRateUSD as (\n    select\n         TargetCurrency\n        ,ExchangeRateEffectiveDate\n        ,ExchangeRate\n    from\n        edw.dim_ExchangeRates\n    where\n        ExchangeRateType = 'ZAXBIBUD'\n        and\n        SourceCurrency = 'USD'\n),\nExchangeRateUSD as (\n    SELECT\n            [SalesDocument]\n        ,   [SalesDocumentItem]\n        ,   [CurrencyID]\n        ,   EuroBudgetExchangeRateUSD.[ExchangeRate] AS [ExchangeRate]\n    FROM (\n        SELECT \n                [SalesDocument]\n            ,   [SalesDocumentItem]\n            ,   [CurrencyID]\n            ,   MAX([ExchangeRateEffectiveDate]) as [ExchangeRateEffectiveDate]\n        FROM             \n            subCalculationMargin SCM\n        LEFT JOIN \n            EuroBudgetExchangeRateUSD\n            ON \n                EuroBudgetExchangeRateUSD.TargetCurrency = 'EUR'\n        WHERE \n            [ExchangeRateEffectiveDate] <= [CreationDate]\n        GROUP BY\n                [SalesDocument]\n            ,   [SalesDocumentItem]\n            ,   [CurrencyID]\n    ) bdi_er_date_usd            \n    LEFT JOIN \n        EuroBudgetExchangeRateUSD\n        ON\n            EuroBudgetExchangeRateUSD.[TargetCurrency] = 'EUR'\n            AND\n            bdi_er_date_usd.[ExchangeRateEffectiveDate] = EuroBudgetExchangeRateUSD.[ExchangeRateEffectiveDate]\n     )\n-- group currency/EUR currency\nSELECT\n    CONCAT_WS(\n        '¦'\n    ,   SDIaxbi.[SalesDocument] collate SQL_Latin1_General_CP1_CS_AS\n    ,   SDIaxbi.[SalesDocumentItem] collate SQL_Latin1_General_CP1_CS_AS\n    ,   CR.[CurrencyTypeID]\n    ) AS [nk_fact_SalesDocumentItem]\n,   SDIaxbi.[SalesDocument]\n,   SDIaxbi.[SalesDocumentItem]\n,   CR.[CurrencyTypeID]\n,   CR.[CurrencyType]\n,   SDIaxbi.[ExchangeRate]\n,   'EUR' AS [CurrencyID]\n,   SDIaxbi.[SDDocumentCategoryID]\n,   SDIaxbi.[SalesDocumentTypeID]\n,   SDIaxbi.[IsReturnsItemID]\n,   SDIaxbi.[CreationDate]\n,   SDIaxbi.[CreationTime]\n,   SDIaxbi.[MaterialID]\n,   SDIaxbi.[BrandID]\n,   SDIaxbi.[Brand]\n,   SDIaxbi.[SoldToPartyID]\n,   SDIaxbi.[BillToPartyID]\n,   SDIaxbi.[OrderQuantity]\n,   SDIaxbi.[CustomerGroupID]\n,   SDIaxbi.[GlobalParentCalculatedID]\n,   SDIaxbi.[GlobalParentCalculated]\n,   SDIaxbi.[LocalParentCalculatedID]\n,   SDIaxbi.[LocalParentCalculated]\n,   SDIaxbi.[NetAmount_EUR] AS [NetAmount]\n,   SDIaxbi.[Margin_EUR] AS [Margin]\n,   SDIaxbi.[NetAmount_EUR] - SDIaxbi.[Margin_EUR] AS CostAmount\n,   SDIaxbi.[RequestedDeliveryDate]\n,   SDIaxbi.[ExternalSalesAgentID]\n,   SDIaxbi.[SalesEmployeeID]\n,   SDIaxbi.[ProjectID]\n,   SDIaxbi.[Project]\n,   SDIaxbi.[SalesOrganizationID]\n,   SDIaxbi.[InOutID]\n,   SDIaxbi.[SalesDistrictID]\n,   SDIaxbi.[t_applicationId]\n,   SDIaxbi.[t_extractionDtm]\nFROM \n    subCalculationMargin SDIaxbi\nCROSS JOIN\n    [edw].[dim_CurrencyType] CR\nWHERE \n    CR.[CurrencyTypeID] = '30'\nUNION ALL\n-- local currency\nSELECT  \n    CONCAT_WS(\n        '¦'\n    ,   SDIaxbi.[SalesDocument] collate SQL_Latin1_General_CP1_CS_AS\n    ,   SDIaxbi.[SalesDocumentItem] collate SQL_Latin1_General_CP1_CS_AS\n    ,   CR.[CurrencyTypeID]\n    ) AS [nk_fact_SalesDocumentItem]\n,   SDIaxbi.[SalesDocument]\n,   SDIaxbi.[SalesDocumentItem]\n,   CR.[CurrencyTypeID]\n,   CR.[CurrencyType]\n,   1.0 AS [ExchangeRate]\n,   SDIaxbi.[CurrencyID]\n,   SDIaxbi.[SDDocumentCategoryID]\n,   SDIaxbi.[SalesDocumentTypeID]\n,   SDIaxbi.[IsReturnsItemID]\n,   SDIaxbi.[CreationDate]\n,   SDIaxbi.[CreationTime]\n,   SDIaxbi.[MaterialID]\n,   SDIaxbi.[BrandID]\n,   SDIaxbi.[Brand]\n,   SDIaxbi.[SoldToPartyID]\n,   SDIaxbi.[BillToPartyID]\n,   SDIaxbi.[OrderQuantity]\n,   SDIaxbi.[CustomerGroupID]\n,   SDIaxbi.[GlobalParentCalculatedID]\n,   SDIaxbi.[GlobalParentCalculated]\n,   SDIaxbi.[LocalParentCalculatedID]\n,   SDIaxbi.[LocalParentCalculated]\n,   SDIaxbi.[NetAmount_LOCAL] AS [NetAmount]\n,   SDIaxbi.[Margin_LOCAL] AS [Margin]\n,   SDIaxbi.[NetAmount_LOCAL] - SDIaxbi.[Margin_LOCAL] AS CostAmount\n,   SDIaxbi.[RequestedDeliveryDate]\n,   SDIaxbi.[ExternalSalesAgentID]\n,   SDIaxbi.[SalesEmployeeID]\n,   SDIaxbi.[ProjectID]\n,   SDIaxbi.[Project]\n,   SDIaxbi.[SalesOrganizationID]\n,   SDIaxbi.[InOutID]\n,   SDIaxbi.[SalesDistrictID]\n,   SDIaxbi.[t_applicationId]\n,   SDIaxbi.[t_extractionDtm]\nFROM\n    subCalculationMargin SDIaxbi\nCROSS JOIN\n    [edw].[dim_CurrencyType] CR\nWHERE \n    CR.[CurrencyTypeID] = '10'\n\nUNION ALL\n\nSELECT\n    CONCAT_WS(\n        '¦'\n    ,   ExchangeRateUSD.[SalesDocument] collate SQL_Latin1_General_CP1_CS_AS\n    ,   ExchangeRateUSD.[SalesDocumentItem] collate SQL_Latin1_General_CP1_CS_AS\n    ,   CR.[CurrencyTypeID]\n    ) AS [nk_fact_SalesDocumentItem]\n,   ExchangeRateUSD.[SalesDocument]\n,   ExchangeRateUSD.[SalesDocumentItem]\n,   CR.[CurrencyTypeID]\n,   CR.[CurrencyType]\n,   CASE \n        WHEN ExchangeRateUSD.[CurrencyID] = 'USD'\n            THEN 1\n        ELSE\n            1/ExchangeRateUSD.[ExchangeRate]\n    END AS [ExchangeRate]\n,   'USD' AS [CurrencyID]\n,   SDIaxbi.[SDDocumentCategoryID]\n,   SDIaxbi.[SalesDocumentTypeID]\n,   SDIaxbi.[IsReturnsItemID]\n,   SDIaxbi.[CreationDate]\n,   SDIaxbi.[CreationTime]\n,   SDIaxbi.[MaterialID]\n,   SDIaxbi.[BrandID]\n,   SDIaxbi.[Brand]\n,   SDIaxbi.[SoldToPartyID]\n,   SDIaxbi.[BillToPartyID]\n,   SDIaxbi.[OrderQuantity]\n,   SDIaxbi.[CustomerGroupID]\n,   SDIaxbi.[GlobalParentCalculatedID]\n,   SDIaxbi.[GlobalParentCalculated]\n,   SDIaxbi.[LocalParentCalculatedID]\n,   SDIaxbi.[LocalParentCalculated]\n,   CASE \n        WHEN  ExchangeRateUSD.[CurrencyID] = 'USD'\n            THEN SDIaxbi.[NetAmount_LOCAL]\n        ELSE\n           SDIaxbi.[NetAmount_EUR] * (1/ExchangeRateUSD.[ExchangeRate])\n    END AS [NetAmount]\n,   CASE \n        WHEN  ExchangeRateUSD.[CurrencyID] = 'USD'\n            THEN SDIaxbi.[Margin_LOCAL]\n        ELSE\n           SDIaxbi.[Margin_EUR] * (1/ExchangeRateUSD.[ExchangeRate])\n    END AS [Margin]\n,   CASE \n        WHEN  ExchangeRateUSD.[CurrencyID] = 'USD'\n            THEN SDIaxbi.[NetAmount_LOCAL] - SDIaxbi.[Margin_EUR]\n        ELSE\n           (SDIaxbi.[NetAmount_EUR] - SDIaxbi.[Margin_EUR]) * (1/ExchangeRateUSD.[ExchangeRate])\n    END AS [CostAmount]\n,   SDIaxbi.[RequestedDeliveryDate]\n,   SDIaxbi.[ExternalSalesAgentID]\n,   SDIaxbi.[SalesEmployeeID]\n,   SDIaxbi.[ProjectID]\n,   SDIaxbi.[Project]\n,   SDIaxbi.[SalesOrganizationID]\n,   SDIaxbi.[InOutID]\n,   SDIaxbi.[SalesDistrictID]\n,   SDIaxbi.[t_applicationId]\n,   SDIaxbi.[t_extractionDtm]\nFROM \n    ExchangeRateUSD\nleft join\n    subCalculationMargin SDIaxbi\n    ON\n        SDIaxbi.[SalesDocument] = ExchangeRateUSD.[SalesDocument]\n        AND\n        SDIaxbi.[SalesDocumentItem] = ExchangeRateUSD.[SalesDocumentItem]\nCROSS JOIN\n    [edw].[dim_CurrencyType] CR\nWHERE\n    CR.[CurrencyTypeID] = '40'",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "syndw_xxxx_sls_d_euw_001",
				"poolName": "syndw_xxxx_sls_d_euw_001"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}