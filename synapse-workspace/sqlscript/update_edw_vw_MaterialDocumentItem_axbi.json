{
	"name": "update_edw_vw_MaterialDocumentItem_axbi",
	"properties": {
		"content": {
			"query": "CREATE VIEW [edw].[vw_MaterialDocumentItem_axbi]\n\tAS \nWITH INVTRANS AS\n(\nSELECT\n        YEAR(FINV.[DATEPHYSICAL])     AS [MaterialDocumentYear]\n    ,   FINV.[INVENTDIMID]            AS [MaterialDocument]\n    ,   FINV.[RECID]                  AS [MaterialDocumentItem]\n    ,   CASE\n            WHEN SINMT.[SAPProductID] IS NULL\n            THEN CONCAT('HALF','-',FINV.[ITEMID])\n            ELSE SINMT.[SAPProductID] --Changed to SAPProductID as the Product Dimension uses leading zero's.\n        END                           AS [MaterialID]\n    ,   dmINV.[INVENTSITEID]          AS [PlantID]\n    ,   dmINV.[INVENTLOCATIONID]\n    ,   FINV.[DATAAREAID]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '0'\n            THEN SL.[SALESID]\n            ELSE NULL\n        END                           AS [SalesOrder]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '0'\n            THEN SL.[INVENTTRANSID]\n            ELSE NULL\n        END                           AS [SalesOrderItem]\n    ,   FINV.[TRANSTYPE]              AS [GoodsMovementTypeID]\n    ,   dmATRNS.[ENUMLABELEN]         AS [GoodsMovementTypeName]\n    ,   FINV.[TRANSTYPENAME]\n    ,   dmINVTBL.[StockUnit]\n    ,   FINV.[DATEPHYSICAL]           AS [HDR_PostingDate]\n    ,   FINV.[DATEPHYSICAL]           AS [DocumentDate]\n    ,   AX_Cmpny.[CURRENCYCODE]       AS [CompanyCodeCurrency]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '3'\n            THEN FPURL.[PURCHID]\n            ELSE NULL\n        END                           AS [PurchaseOrder]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '3'\n            THEN FPURL.[INVENTTRANSID]\n            ELSE NULL\n        END                           AS [PurchaseOrderItem]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '2'\n            THEN FPJRNL.[PRODID]\n            ELSE NULL\n        END                           AS [Order]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '2'\n            THEN FPJRNL.[INVENTTRANSID]\n            ELSE NULL\n        END                           AS [OrderItem]\n    ,   CASE \n            WHEN FINV.[TRANSTYPE] = '0'\n            THEN\n                CASE\n                    WHEN SL.[SALESTYPE] IN ('3','101') THEN 'C'\n                    WHEN SL.[SALESTYPE] = '4' THEN 'H'\n                    WHEN SL.[SALESTYPE] = '110'\n                    THEN\n                        CASE\n                            WHEN SL.[LineAmount_MST_TransDate] > 0 THEN 'L' \n                            WHEN SL.[LineAmount_MST_TransDate] < 0 THEN 'K' \n                            WHEN SL.[LineAmount_MST_TransDate] = 0\n                            THEN    \n                                CASE \n                                    WHEN SL.[SALESQTY] > 0 THEN 'L'\n                                    WHEN SL.[SALESQTY] < 0 THEN 'K'\n                                END\n                        END\n                END\n        END                           AS [SalesDocumentItemCategoryID]\n    ,   FINV.[QTY]                    AS [MatlStkChangeQtyInBaseUnit]\n    ,   FINV.[QTY]                    AS [MatlCnsmpnQtyInMatlBaseUnit]\n    ,   FINV.[CostAmount_Total]\n    ,   FINV.[INVENTTRANSID]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '2'\n            THEN FPJRNL.[PRODID]\n            ELSE NULL\n        END                           AS [ManufacturingOrder]\n    ,   CASE\n            WHEN FINV.[TRANSTYPE] = '2'\n            THEN FPJRNL.[INVENTTRANSID]\n            ELSE NULL\n        END                           AS [ManufacturingOrderItem]\n    ,   'A'                           AS [PriceControlIndicatorID]\n    ,   'Average Price'               AS [PriceControlIndicator]\n    ,   FINV.[t_applicationId]\n    ,   FINV.[t_extractionDtm]\nFROM\n    intm_axbi.vw_FACT_INVENTTRANS FINV\nLEFT JOIN\n    [edw].[dim_SAPItemNumberBasicMappingTable] SINMT \n    ON\n        FINV.[ITEMID] = SINMT.[AXItemnumber]\n        AND\n        [AXDataAreaId] = '0000' --Halfen entities are mapped with Data Area '0000'.\n        AND\n        SINMT.[SAPProductID] IS NOT NULL\nLEFT JOIN\n [base_tx_halfen_2_dwh].[DIM_INVENTDIM] dmINV\n    ON\n        dmINV.[INVENTDIMID] = FINV.[INVENTDIMID]\nLEFT JOIN\n    intm_axbi.vw_FACT_SALESLINE SL\n    ON\n        FINV.[INVENTTRANSID] = SL.[INVENTTRANSID]\nLEFT JOIN\n    [base_tx_halfen_2_dwh].[DIM_ADUENUMTRANSLATIONS] dmATRNS\n    ON\n        dmATRNS.[ENUMVALUE] = FINV.[TRANSTYPE]\nLEFT JOIN\n    [base_tx_halfen_2_dwh].[DIM_INVENTTABLE] dmINVTBL\n    ON\n        FINV.[ITEMID] = dmINVTBL.[ITEMID]\n        AND \n        FINV.[DATAAREAID] = dmINVTBL.[DATAAREAID]\nLEFT JOIN\n    [base_dw_halfen_1_stg].[AX_Halfen_dbo_COMPANYINFO] AX_Cmpny\n    ON\n        FINV.[DATAAREAID] = AX_Cmpny.[DATAAREAID]\nLEFT JOIN\n    intm_axbi.vw_FACT_PURCHLINE FPURL\n    ON\n        FINV.[INVENTTRANSID] = FPURL.[INVENTTRANSID]\nLEFT JOIN\n    intm_axbi.vw_FACT_PRODJOURNALPROD FPJRNL\n    ON\n        FINV.[INVENTTRANSID] = FPJRNL.[INVENTTRANSID]\n        AND\n        FINV.[INVENTDIMID] = FPJRNL.[INVENTDIMID]\nWHERE\n    (FINV.[STATUSRECEIPT] in ('1','2')\n    OR\n    FINV.[STATUSISSUE] in ('1','2'))\n    AND\n    FINV.[DATEPHYSICAL]<>''\n    AND\n    dmINV.[INVENTSITEID] NOT LIKE '%D%'\n    AND \n    dmATRNS.[ENUMID] = '107'\n    AND\n    dmINVTBL.[ITEMTYPE] <> '2'\n    AND\n    dmINVTBL.[HPLBUSINESSRULESTATUSID] NOT IN ('0000.NEW ITEM', '9999.NOT ACTIVE')\n    AND\n    LEFT(dmINVTBL.[ITEMID],4) <> '9910'\n    AND\n    dmINVTBL.[HPLSTATISTICGROUPID] <> 'YYYY'\n    AND\n    FINV.DATEFINANCIAL<>'1900-01-01'\n    AND\n    FINV.DATEPHYSICAL<>'1900-01-01'\n),\nCQtySOInBU AS(\nSELECT \n        [DATAAREAID]\n    ,   [PlantID]\n    ,   [INVENTLOCATIONID]\n    ,   [MaterialID]\n    ,   [GoodsMovementTypeID]\n    ,   [TRANSTYPENAME]\n    ,   SUM([MatlStkChangeQtyInBaseUnit]) as [ConsumptionQtySOInBaseUnit]\nFROM\n    INVTRANS\nWHERE\n    [GoodsMovementTypeID] = '0'\nGROUP BY\n        [DATAAREAID]\n    ,   [PlantID]\n    ,   [INVENTLOCATIONID]\n    ,   [MaterialID]\n    ,   [GoodsMovementTypeID]\n    ,   [TRANSTYPENAME]\n),\nCQtyOBDProInBU AS(\nSELECT  \n        [DATAAREAID]\n    ,   [PlantID]\n    ,   [INVENTLOCATIONID]\n    ,   [MaterialID]\n    ,   [GoodsMovementTypeID]\n    ,   [TRANSTYPENAME]\n    ,   SUM([MatlStkChangeQtyInBaseUnit]) as [ConsumptionQtyOBDProInBaseUnit]\nFROM\n    INVTRANS\nWHERE\n    [GoodsMovementTypeID] = '2'\nGROUP BY\n        [DATAAREAID]\n    ,   [PlantID]\n    ,   [INVENTLOCATIONID]\n    ,   [MaterialID]\n    ,   [GoodsMovementTypeID]\n    ,   [TRANSTYPENAME]\n),\nCQtyOICPInBU AS(\nSELECT\n        INVT.[DATAAREAID]\n    ,   [PlantID]\n    ,   [INVENTLOCATIONID]\n    ,   INVT.[MaterialID]\n    ,   [GoodsMovementTypeID]\n    ,   [TRANSTYPENAME]\n    ,   SUM([MatlStkChangeQtyInBaseUnit]) as [ConsumptionQtyICPOInBaseUnit]\nFROM\n    INVTRANS INVT\nLEFT JOIN\n    intm_axbi.vw_FACT_PURCHLINE FP\n        ON\n        INVT.[INVENTTRANSID] = FP.[INVENTTRANSID]\nLEFT JOIN \n    [base_tx_halfen_2_dwh].[DIM_VENDTABLE] dmVend\n        ON\n        FP.[VENDACCOUNT] = CAST(dmVend.[ACCOUNTNUM] AS NVARCHAR(20))\n        AND\n        FP.[DATAAREAID] = dmVend.[DATAAREAID]\nWHERE\n    INVT.[GoodsMovementTypeID] = '3'\n    AND\n    dmVend.[VENDGROUP] = '200'\nGROUP BY\n        INVT.[DATAAREAID]\n    ,   [PlantID]\n    ,   [INVENTLOCATIONID]\n    ,   INVT.[MaterialID]\n    ,   [GoodsMovementTypeID]\n    ,   [TRANSTYPENAME]\n),\nAvgPricePerUnit AS(\nSELECT\n        [MaterialID]\n    ,   [PlantID]\n    ,   [DATAAREAID]    \n    ,   CASE\n            WHEN ISNULL(SUM([CostAmount_Total]),0) != 0\n            THEN SUM([MatlStkChangeQtyInBaseUnit])/SUM([CostAmount_Total])\n            ELSE 0\n        END AS [AvgPrice]\nFROM\n    INVTRANS INVT\nWHERE\n    [GoodsMovementTypeID] IN ('13','2','8','3','6','22','21')\n    AND\n    [MatlStkChangeQtyInBaseUnit] > 0\nGROUP BY\n        [MaterialID]\n    ,   [PlantID]\n    ,   [DATAAREAID]\n),\nEuroExchangeRate AS (\n    SELECT \n         [SourceCurrency]\n        ,[ExchangeRateEffectiveDate]\n        ,[ExchangeRate]\n    FROM \n        edw.dim_ExchangeRates\n    WHERE\n        [ExchangeRateType] = 'ZAXBIBUD'\n        and\n        [TargetCurrency] = 'EUR'\n),\nExchangeRateEuro as (\n    SELECT\n            [MaterialDocument]\n        ,   [MaterialDocumentItem]\n        ,   EuroExchangeRate.[ExchangeRate] AS [ExchangeRate]\n    FROM (\n        SELECT\n                [MaterialDocument]\n            ,   [MaterialDocumentItem]\n            ,   [CompanyCodeCurrency] COLLATE DATABASE_DEFAULT AS [CompanyCodeCurrency]\n            ,   MAX([ExchangeRateEffectiveDate]) as [ExchangeRateEffectiveDate]\n        FROM \n            INVTRANS INV\n        LEFT JOIN \n            EuroExchangeRate\n            ON \n                INV.[CompanyCodeCurrency] COLLATE DATABASE_DEFAULT = EuroExchangeRate.SourceCurrency\n        WHERE \n            [ExchangeRateEffectiveDate] <= [DocumentDate]\n        GROUP BY\n                [MaterialDocument]\n            ,   [MaterialDocumentItem]\n            ,   [CompanyCodeCurrency] \n    ) inv_er_date_eur\n    LEFT JOIN \n        EuroExchangeRate\n        ON\n            inv_er_date_eur.[CompanyCodeCurrency] = EuroExchangeRate.[SourceCurrency]\n            AND\n            inv_er_date_eur.[ExchangeRateEffectiveDate] = EuroExchangeRate.[ExchangeRateEffectiveDate]\n),\nINVTRANS_QTY AS(\nSELECT\n        INV.[MaterialDocumentYear]\n    ,   ExchangeRateEuro.[MaterialDocument]\n    ,   ExchangeRateEuro.[MaterialDocumentItem]\n    ,   INV.[MaterialID]\n    ,   INV.[PlantID]\n    ,   dmInvLocation.[INVENTLOCATIONID] AS [StorageLocationID]\n    ,   INV.[DATAAREAID]\n    ,   INV.[SalesOrder]\n    ,   INV.[SalesOrderItem]\n    ,   INV.[GoodsMovementTypeID]\n    ,   INV.[GoodsMovementTypeName]\n    ,   SU.[target_Unit] AS [MaterialBaseUnitID]\n    ,   INV.[HDR_PostingDate]\n    ,   INV.[DocumentDate]\n    ,   INV.[CompanyCodeCurrency]\n    ,   INV.[PurchaseOrder]\n    ,   INV.[PurchaseOrderItem]\n    ,   INV.[Order]\n    ,   INV.[OrderItem]\n    ,   INV.[SalesDocumentItemCategoryID]\n    ,   CASE\n            WHEN INV.[GoodsMovementTypeID] = '0'\n            THEN vwSDDC.[SDDocumentCategory]\n            ELSE NULL\n        END                           AS [SalesDocumentItemCategory]\n    ,   INV.[MatlStkChangeQtyInBaseUnit]\n    ,   QtySO.[ConsumptionQtySOInBaseUnit] AS [ConsumptionQtySOInBaseUnit]\n    ,   QtyOBD.[ConsumptionQtyOBDProInBaseUnit] AS [ConsumptionQtyOBDProInBaseUnit]\n    ,   QtyOICP.[ConsumptionQtyICPOInBaseUnit] AS [ConsumptionQtyICPOInBaseUnit]\n    ,   INV.[MatlCnsmpnQtyInMatlBaseUnit]\n    ,   INV.[ManufacturingOrder]\n    ,   INV.[ManufacturingOrderItem]\n    ,   INV.[PriceControlIndicatorID]\n    ,   INV.[PriceControlIndicator]\n    ,   '10' AS [CurrencyTypeID]\n    ,   APU.AvgPrice AS [StandardPricePerUnit]\n    ,   CASE \n            WHEN [CompanyCodeCurrency]='EUR' THEN APU.AvgPrice\n            ELSE APU.AvgPrice*ExchangeRateEuro.ExchangeRate\n        END AS [StandardPricePerUnit_EUR]\n    ,   INV.[t_applicationId]\n    ,   INV.[t_extractionDtm]\nFROM\n    ExchangeRateEuro\nLEFT JOIN\n    INVTRANS AS INV\n    ON\n        INV.[MaterialDocument] = ExchangeRateEuro.[MaterialDocument]\n        AND\n        INV.[MaterialDocumentItem] = ExchangeRateEuro.[MaterialDocumentItem]\nLEFT JOIN\n    [edw].[dim_SDDocumentCategory] vwSDDC\n    ON \n        INV.[SalesDocumentItemCategoryID] = vwSDDC.SDDocumentCategoryID\nLEFT JOIN\n    [base_tx_halfen_2_dwh].[DIM_INVENTLOCATION] dmInvLocation\n        ON\n        dmInvLocation.[INVENTLOCATIONID] = INV.[INVENTLOCATIONID]\nLEFT JOIN\n    map_AXBI.[StockUnit] SU\n        ON\n        INV.[StockUnit] = SU.[source_UnitID]\nLEFT JOIN\n    AvgPricePerUnit APU\n        ON\n        APU.[MaterialID] =  INV.[MaterialID]\n        AND\n        APU.[PlantID] = INV.[PlantID]\n        AND\n        APU.[DATAAREAID] = INV.[DATAAREAID]\nLEFT JOIN\n    CQtySOInBU QtySO\n        ON \n        QtySO.[DATAAREAID] = INV.[DATAAREAID]\n        AND\n        QtySO.[PlantID] = INV.[PlantID]\n        AND\n        QtySO.[INVENTLOCATIONID] = INV.[INVENTLOCATIONID]\n        AND\n        QtySO.[MaterialID] = INV.[MaterialID]\n        AND\n        QtySO.[GoodsMovementTypeID] = INV.[GoodsMovementTypeID]\n        AND\n        QtySO.[TRANSTYPENAME] = INV.[GoodsMovementTypeName]\nLEFT JOIN\n    CQtyOBDProInBU QtyOBD\n        ON \n        QtyOBD.[DATAAREAID] = INV.[DATAAREAID]\n        AND\n        QtyOBD.[PlantID] = INV.[PlantID]\n        AND\n        QtyOBD.[INVENTLOCATIONID] = INV.[INVENTLOCATIONID]\n        AND\n        QtyOBD.[MaterialID] = INV.[MaterialID]\n        AND\n        QtyOBD.[GoodsMovementTypeID] = INV.[GoodsMovementTypeID]\n        AND\n        QtyOBD.[TRANSTYPENAME] = INV.[GoodsMovementTypeName]\nLEFT JOIN\n    CQtyOICPInBU QtyOICP\n        ON \n        QtyOICP.[DATAAREAID] = INV.[DATAAREAID]\n        AND\n        QtyOICP.[PlantID] = INV.[PlantID]\n        AND\n        QtyOICP.[INVENTLOCATIONID] = INV.[INVENTLOCATIONID]\n        AND\n        QtyOICP.[MaterialID] = INV.[MaterialID]\n        AND\n        QtyOICP.[GoodsMovementTypeID] = INV.[GoodsMovementTypeID]\n        AND\n        QtyOICP.[TRANSTYPENAME] = INV.[GoodsMovementTypeName]\nLEFT JOIN                                                           -- Migration reference was joined to exclude unnecessary data from migrated systems\n    [map_AXBI].[Migration] AXM\n        ON\n        INV.[DATAAREAID] = AXM.[DataAreaID]\nWHERE\n    INV.[DocumentDate] < COALESCE (AXM.MigrationDate,'9999-12-31')\n)\nSELECT  DISTINCT\n        INV_QTY.[MaterialDocumentYear]\n    ,   INV_QTY.[MaterialDocument]\n    ,   INV_QTY.[MaterialDocumentItem]\n    ,   INV_QTY.[MaterialID]\n    ,   INV_QTY.[PlantID]\n    ,   INV_QTY.[StorageLocationID]\n    ,   INV_QTY.[DATAAREAID] AS axbi_DataAreaID\n    ,   INV_QTY.[SalesOrder]\n    ,   INV_QTY.[SalesOrderItem]\n    ,   INV_QTY.[GoodsMovementTypeID]\n    ,   INV_QTY.[GoodsMovementTypeName]\n    ,   INV_QTY.[MaterialBaseUnitID]\n    ,   INV_QTY.[HDR_PostingDate]\n    ,   INV_QTY.[DocumentDate]\n    ,   INV_QTY.[CompanyCodeCurrency]\n    ,   INV_QTY.[PurchaseOrder]\n    ,   INV_QTY.[PurchaseOrderItem]\n    ,   INV_QTY.[Order]\n    ,   INV_QTY.[OrderItem]\n    ,   INV_QTY.[SalesDocumentItemCategoryID]\n    ,   INV_QTY.[SalesDocumentItemCategory]\n    ,   INV_QTY.[StandardPricePerUnit]\n    ,   INV_QTY.[StandardPricePerUnit_EUR]\n    ,   INV_QTY.[PriceControlIndicatorID]\n    ,   INV_QTY.[PriceControlIndicator]\n    ,   INV_QTY.[StandardPricePerUnit]*INV_QTY.[ConsumptionQtyICPOInBaseUnit] AS [ConsumptionQtyICPOInStandardValue]\n    ,   INV_QTY.[ConsumptionQtyICPOInBaseUnit]*INV_QTY.[StandardPricePerUnit_EUR] AS [ConsumptionQtyICPOInStandardValue_EUR]\n    ,   INV_QTY.[ConsumptionQtySOInBaseUnit]*INV_QTY.[StandardPricePerUnit] AS [ConsumptionQtySOStandardValue]\n    ,   INV_QTY.[ConsumptionQtySOInBaseUnit]*INV_QTY.[StandardPricePerUnit_EUR] AS [ConsumptionQtySOStandardValue_EUR]\n    ,   INV_QTY.[MatlStkChangeQtyInBaseUnit]*INV_QTY.[StandardPricePerUnit] AS [MatlStkChangeStandardValue]\n    ,   INV_QTY.[MatlStkChangeQtyInBaseUnit]*INV_QTY.[StandardPricePerUnit_EUR] AS [MatlStkChangeStandardValue_EUR]\n    ,   INV_QTY.[ConsumptionQtyOBDProInBaseUnit]*INV_QTY.[StandardPricePerUnit] AS [ConsumptionQtyProStandardValue]\n    ,   INV_QTY.[ConsumptionQtyOBDProInBaseUnit]*INV_QTY.[StandardPricePerUnit_EUR] AS [ConsumptionQtyProStandardValue_EUR]\n    ,   INV_QTY.[CurrencyTypeID]\n    ,   INV_QTY.[MatlStkChangeQtyInBaseUnit]\n    ,   INV_QTY.[ConsumptionQtyICPOInBaseUnit]\n    ,   INV_QTY.[ConsumptionQtyOBDProInBaseUnit]\n    ,   INV_QTY.[ConsumptionQtySOInBaseUnit]\n    ,   INV_QTY.[MatlCnsmpnQtyInMatlBaseUnit]\n    ,   INV_QTY.[ManufacturingOrder]\n    ,   INV_QTY.[ManufacturingOrderItem]\n    ,   INV_QTY.[t_applicationId]\n    ,   INV_QTY.[t_extractionDtm]\nFROM\n    INVTRANS_QTY AS INV_QTY",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "sqlserverless",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}