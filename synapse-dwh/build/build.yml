# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool: 
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

# Check for duplicates in Master Data csv-files
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: './src/libs/check_duplicates.py'
    
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# Substitute the connection string for the Test Project 
# so Azure DevOps can run the Test Cases
- task: FileTransform@1
  displayName: 'Update Connection String for Test Project'
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)/Test/'
    fileType: 'xml'
    targetFiles: 'app.config'

# Build the Test Project
- task: VSBuild@1
  displayName: 'Build Test Project'
  inputs:
    solution: '**/*.csproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Build the SQL DB Project
- task: VSBuild@1
  displayName: 'Build SQL DB Project'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
#    msbuildArgs: '/v:SqlCmdVar__1=stxxxxslsdeuw001'



#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

# expose dacpac as build artifact
- task: CopyFiles@2
  displayName: 'Copy SQL DB dacpac'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\syndw_xxxx_sls_d_euw_001\bin\Release'
    Contents: '*.dacpac'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Test Assemblies'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\Test\bin\Release'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Test'

# expose publish config as build artifact
- task: CopyFiles@2
  displayName: 'Copy publish config'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\publish'
    Contents: '*.xml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

# expose src folder as build artifact
- task: CopyFiles@2
  displayName: 'Copy src folder'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\src'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\src'

# expose Master Data as build artifact
- task: CopyFiles@2
  displayName: 'Copy Master Data files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\syndw_xxxx_sls_d_euw_001\Master Data'
    Contents: '**\*.csv'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Master Data'

# publish artifacts
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'Release'
    publishLocation: 'pipeline'