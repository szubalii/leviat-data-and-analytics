steps:

  # Check for duplicates in Master Data csv-files
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: './synapse-dwh/src/libs/check_duplicates.py'
  displayName: 'Check for duplicates in Master Data csv-files'
    
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

  # Substitute the connection string for the Test Project 
  # so Azure DevOps can run the Test Cases
- task: FileTransform@1
  displayName: 'Update Connection String for Test Project'
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)/synapse-dwh/Test/'
    fileType: 'xml'
    targetFiles: 'app.config'

  # Build the Test Project
- task: VSBuild@1
  displayName: 'Build Test Project'
  inputs:
    solution: '**/synapse-dwh/**/*.csproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Run tests from provided Test Plan and Suites
# - task: VSTest@2
#   displayName: 'Run Test Cases'
#   inputs:
#     testSelector: testPlan
#     testPlan: 397
#     testSuite: 2646
#     testConfiguration: 6
#     searchFolder: '$(System.DefaultWorkingDirectory)/synapse-dwh/Test/bin/$(buildConfiguration)'

# Run test directly from assemblies and use Test Filter
- task: VSTest@2
  displayName: 'Run Test Cases'
  inputs:
    testSelector: testAssemblies
    searchFolder: '$(System.DefaultWorkingDirectory)/synapse-dwh/Test/bin/$(buildConfiguration)'
    testFiltercriteria: $(testCaseFilter)
    # runOnlyImpactedTests: True



  # Build the SQL DB Project
- task: VSBuild@1
  displayName: 'Build SQL DB Project'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
#    msbuildArgs: '/v:SqlCmdVar__1=stxxxxslsdeuw001'

