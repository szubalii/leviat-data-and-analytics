steps:
- download: none

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current' 
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'XtractUniversal'

# Update the source and destinations in the extractions
- task: FileTransform@1
  displayName: 'File Transform: Destination and Source in Extractions'
  inputs:
    folderPath: '$(Pipeline.Workspace)\XtractUniversal\extractions'
    fileType: json
    targetFiles: '**/general.json'

  # Copy Repo XU Config Extractions to ADLS
  # This is used by ADF to know which extraction is configured to use file splitting
- task: PowerShell@2
  displayName: 'Copy XU Config to ADLS'
  inputs:
    targetType: 'inline'
    pwsh: true
    script: |
      # connect to Azure using VM
      azcopy login --identity

      # directly copy to storage account using azcopy
      azcopy copy `
        '$(Pipeline.Workspace)\XtractUniversal\extractions\*' `
        'https://$(storageAccountName).dfs.core.windows.net/xu-configuration/extractions' `
        --recursive

# Update the extraction names by renaming the folders to include the environment prefix
# - script: for /d %D in ("$(System.DefaultWorkingDirectory)\xu-config\extractions\*") do ren "%D" "$(environment)_%~nxD"
- task: PowerShell@2
  displayName: Add environment prefix to extraction folder names
  inputs:
    targetType: 'inline'
    pwsh: true
    script: |
      Get-ChildItem -Path '$(Pipeline.Workspace)\XtractUniversal\extractions' |
      Foreach-Object {Rename-Item -Path $_.FullName -NewName ("$(xuPrefix)_"+($_.Name))}



  # Copy Repo XU Config to VM XU Config
- task: CopyFiles@2
  displayName: 'Copy Repo XU Config to VM XU Config'
  inputs:
    SourceFolder: '$(Pipeline.Workspace)\XtractUniversal\extractions'
    Contents: '$(xuPrefix)*/**/*.json' # copy only those extractions required for deployment
    TargetFolder: 'C:\Program Files\XtractUniversal\config\extractions'
    OverWrite: true

