trigger: none # triggered by PR


variables:
- template: ../../build/variables-test.yml
- ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
  - name: xuPrefix
    value: $(System.PullRequest.PullRequestId)
  - name: commitId
    value: $(System.PullRequest.SourceCommitId)
- ${{ elseif eq(variables['Build.Reason'], 'Manual') }}:
  - name: xuPrefix
    value: PR0000

jobs:
- job: RUN_CHANGED_EXTRACTIONS
  variables:
  - name: storageAccountName
    value: stprteuw001
  - name: destination
    value: $[ format('{0}_s4h-{1}-{2}', variables['storageAccountName'], variables['S4HSystemId'], variables['S4HClientId']) ]
  pool:
    name: 'VM'
    demands:
    - node.js
    - VisualStudio
    - Agent.ComputerName -equals $(VMName)
  steps:  

  - checkout: none

  - script: |
      git clean -ffdx
      git reset --hard HEAD
      git fetch origin main
      git checkout origin/main
      git fetch origin pull/$(System.PullRequest.PullRequestId)/merge
      git checkout pull/$(System.PullRequest.PullRequestId)/merge

  
  - task: PowerShell@2
    displayName: 'Get Changed Extractions'
    name: GetChangedExtractions
    inputs:
      filePath: $(System.DefaultWorkingDirectory)/xu-config/src/getChangedExtractions.ps1
      pwsh: true

  - template: ./steps-build.yml
  # - template: ./steps-artifact.yml
  - template: ./steps-deploy-helper.yml
    parameters:
      xuPath: $(System.SourcesDirectory)/xu-config/extractions
  
# - job: RUN_EXTRACTIONS
#   dependsOn: BUILD_DEPLOY
#   pool:
#     name: 'VM'
#     demands:
#     - node.js
#     - VisualStudio
#     - Agent.ComputerName -equals $(VMName)
#   steps:

#   - checkout: none

#   - script: |
#       git fetch origin main
#       git checkout origin/main
#       git checkout pull/$(System.PullRequest.PullRequestId)/merge
  # - checkout: self
  #   fetchDepth: 0
    

  - task: PowerShell@2
    displayName: 'Run Changed Extractions'
    name: RunChangedExtractions
    inputs:
      filePath: $(System.DefaultWorkingDirectory)/xu-config/src/runExtractions.ps1
      arguments: >
        -extractions $(changedExtractions)
      pwsh: true

# - job: CLEAN_UP
#   dependsOn:
#   - BUILD_DEPLOY
#   - RUN_EXTRACTIONS
#   condition: always()
#   pool:
#     name: 'VM'
#     demands:
#     - node.js
#     - VisualStudio
#     - Agent.ComputerName -equals $(VMName)
#   steps:
#   - checkout: none
  - task: DeleteFiles@1
    condition: always()
    displayName: 'Clean up'
    inputs:
      SourceFolder: 'C:\Program Files\XtractUniversal\config\extractions'
      Contents: $(xuPrefix)*
  