steps:

- script: |
    docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=$(mssql-sa-pwd)" -p 1433:1433 -d mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Start a mssql-server instance for SQL Server 2022'

- script: |
    sleep 30
  displayName: 'Wait till SQL Server is ready'

- script: |
    
  displayName: 'Create Database in SQL Server?'

- script: |
    dotnet build "$(System.DefaultWorkingDirectory)/orchestration/TestOrchestrationDB/TestOrchestrationDB.sqlproj" /p:NetCoreBuild=true"
  displayName: 'Deploy sqlproj to docker container'

# - script: |
#     SqlPackage /Action:Publish /SourceFile:"C:\AdventureWorksLT.dacpac" \
#     /TargetConnectionString:"Server=tcp:{yourserver}.database.windows.net,1433;Initial Catalog=AdventureWorksLT;Persist Security Info=False;User ID=sqladmin;Password={your_password};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
#   displayName: 'Run TSQLT tests'


# Cleaning existing deployments...
#     > docker ps -q -a --filter label=source=sqldbproject-testorchestrationdb

# Cleaning existing deployments...
#     > docker stop 9f8b848e3064
#     > docker rm 9f8b848e3064

# Creating deployment settings ...
# Running the docker container ...
#     > docker pull mcr.microsoft.com/mssql/server
#     > docker run -p 1433:1433 -e "MSSQL_SA_PASSWORD=***" -e "ACCEPT_EULA=Y" -e "MSSQL_PID=Developer" --label source=sqldbproject-testorchestrationdb -d --name sqldbproject-testorchestrationdb-d68658da-fd66-4a33-b786-0c0b32b9692f mcr.microsoft.com/mssql/server
#     > docker ps -q -a --filter label=source=sqldbproject-testorchestrationdb -q

# Docker container created. Id: 91efd33cafb8

# Waiting for 2 seconds before another attempt for operation 'Validating the docker container'
# Running operation 'Validating the docker container' Attempt 0 of 10
#     > docker ps -q -a --filter label=source=sqldbproject-testorchestrationdb -q

# Operation 'Validating the docker container' completed successfully. Result: 91efd33cafb8

# Docker created id: '91efd33cafb8

# Waiting for 10 seconds before another attempt for operation 'Connecting to SQL Server'
# Running operation 'Connecting to SQL Server' Attempt 0 of 3
# Operation 'Connecting to SQL Server' failed. Re-trying... Error: 'Connection request for {"password":"Welcome1","server":"localhost","port":1433,"database":"master","savePassword":false,"user":"sa","authenticationType":"SqlLogin","encrypt":false,"connectTimeout":30,"applicationName":"SQL Database Project","profileName":"sqldbproject-testorchestrationdb-d68658da-fd66-4a33-b786-0c0b32b9692f"} failed' 
# Waiting for 10 seconds before another attempt for operation 'Connecting to SQL Server'
# Running operation 'Connecting to SQL Server' Attempt 1 of 3
# Operation 'Connecting to SQL Server' failed. Re-trying... Error: 'Connection request for {"password":"Welcome1","server":"localhost","port":1433,"database":"master","savePassword":false,"user":"sa","authenticationType":"SqlLogin","encrypt":false,"connectTimeout":30,"applicationName":"SQL Database Project","profileName":"sqldbproject-testorchestrationdb-d68658da-fd66-4a33-b786-0c0b32b9692f"} failed' 
# Waiting for 10 seconds before another attempt for operation 'Connecting to SQL Server'
# Running operation 'Connecting to SQL Server' Attempt 2 of 3
# Operation 'Connecting to SQL Server' completed successfully. Result: vscode-mssql-adhoc://query2

# [ Build ]
#     > "C:\\Program Files\\dotnet\\dotnet.exe"  build "c:\\Users\\Michiel_Pors\\source\\repos\\leviat-data-and-analytics\\orchestration\\TestOrchestrationDB\\TestOrchestrationDB.sqlproj" /p:NetCoreBuild=true /p:SystemDacpacsLocation="c:\\Users\\Michiel_Pors\\.vscode\\extensions\\ms-mssql.sql-database-projects-vscode-1.1.1\\BuildDirectory"

# # - script: |
# #     sqlcmd -S localhost -U sa -P P@ssw0rd -d master -Q "select getdate()"
# #     if [ $? -eq 0 ]
# #     then
# #         echo "sql server ready"
# #         break
# #     else
# #         echo "not ready yet..."
# #         sleep 1
# #     fi
# #   displayName: 'Start a mssql-server instance for SQL Server 2022'


# # - name: 'Create and setup database'
# #   uses: azure/sql-action@v2
# #   with:
# #     connection-string: "Server=localhost;Initial Catalog=master;User ID=sa;Password=P@ssw0rd;Encrypt=False;TrustServerCertificate=False;"  # the local connection string
# #     path: './setups/setupDatabase.sql' # the sql script to create db and configure for clr

# # - script: |
# #   docker exec -it <container_id|container_name> /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P <your_password>
# #   displayName: 'Deploy Projects'
# #   with:
# #     connection-string: "Server=localhost;Initial Catalog=testingDB;User ID=sa;Password=P@ssw0rd;Encrypt=False;TrustServerCertificate=False;"  # the local connection string
# #     path: './TestsSQLServer/TestsSQLServer.sqlproj' # the SQLproj file
# #     action: 'Publish'
# #     arguments: '/p:IncludeCompositeObjects=True'

# # - script: 'Run tSQLt tests'
# #   uses: azure/sql-action@v2
# #   with:
# #     connection-string: "Server=localhost;Initial Catalog=testingDB;User ID=sa;Password=P@ssw0rd;"  # the local connection string
# #     path: './TestsSQLServer/myTests/demoExecAzureSQL.sql' # the tsqlt test command