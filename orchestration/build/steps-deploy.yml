steps:
  
# - task: AzureFileCopy@4
#   displayName: 'AzureBlob File Copy Master Data Generic'
#   inputs:
#     SourcePath: '$(Pipeline.Workspace)/OrchestrationDB/Master Data/*'
#     azureSubscription: 'Leviat-we-sub-01 (f199b488-7d9d-4992-aeda-c10a1e1c9b9e)'
#     Destination: AzureBlob
#     storage: '$(storageAccountName)'
#     ContainerName: 'orch-db'

# Workaround: copy entity.csv file in separate task to fix copy issues
- task: PowerShell@2
  displayName: 'Copy Master Data to AzureBlob (excl. entity.csv)'
  inputs:
    targetType: 'inline'
    pwsh: true
    script: |
      # connect to Azure using VM
      azcopy login --identity

      # directly copy to storage account using azcopy
      azcopy copy `
        '$(Pipeline.Workspace)\OrchestrationDB\Master Data\$(environment)\*' `
        'https://$(storageAccountName).blob.core.windows.net/orch-db' `
        --recursive `
        --exclude-path=entity.csv

- task: PowerShell@2
  displayName: 'Copy entity.csv to AzureBlob'
  inputs:
    targetType: 'inline'
    pwsh: true
    script: |
      # connect to Azure using VM
      azcopy login --identity

      # directly copy to storage account using azcopy
      azcopy copy `
        '$(Pipeline.Workspace)\OrchestrationDB\Master Data\$(environment)\*' `
        'https://$(storageAccountName).blob.core.windows.net/orch-db' `
        --recursive `
        --include-path=entity.csv

- task: PowerShell@2
  displayName: Get SAS key for orch-db container
  inputs:
    targetType: 'inline'
    pwsh: true
    script: |
      # connect to Azure using VM
      Connect-AzAccount -Identity
      
      # get storage account context
      $ctx = New-AzStorageContext -StorageAccountName $(storageAccountName) -UseConnectedAccount

      # get tomorrow's date
      $tomorrow = (Get-Date).AddDays(1)
      
      # get sas key
      $sasKey = New-AzStorageContainerSASToken -Context $ctx `
      -Name orch-db `
      -Permission ral `
      -ExpiryTime $tomorrow

      # remove the first character which is a question mark (?)
      $sasKey = $sasKey.substring(1)

      # set variable in script
      Write-Host "##vso[task.setvariable variable=sasToken_OrchDB;issecret=true]$sasKey"

- task: SqlAzureDacpacDeployment@1
  displayName: 'Azure SQL DacpacTask'
  inputs:
    azureSubscription: 'arm-pipeline'
    AuthenticationType: servicePrincipal
    ServerName: '$(sqlServerName).database.windows.net'
    DatabaseName: '$(sqlDatabaseName)'
    DacpacFile: '$(Pipeline.Workspace)/OrchestrationDB/sqldb-xxxx-orchdb-d-euw-001.dacpac'
    AdditionalArguments: '/v:masterKeyPwd=$(sqlsrv-xxxx-sls-x-euw-001-masterKeyPwd) /v:sasToken_OrchDB=$(sasToken_OrchDB) /v:containerURL=https://$(storageAccountName).blob.core.windows.net/orch-db'
