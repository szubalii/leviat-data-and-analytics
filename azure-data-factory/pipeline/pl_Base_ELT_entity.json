{
	"name": "pl_Base_ELT_entity",
	"properties": {
		"activities": [
			{
				"name": "Set ADLS File Name",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "adlsFileName",
					"value": {
						"value": "@concat(\n    pipeline().parameters.base_table_name\n    ,'_'\n    ,formatDateTime(utcNow(),'yyyy_MM_dd_HH_mm_ss_fff')\n    ,'.parquet'\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Processing Synapse Base Table Required",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Synapse Ingestion Required",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(\n    equals(\n        pipeline().parameters.base_sproc_name,\n        null\n    )\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Process Synapse Base Table",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_SYNDW_Base_process",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"base_schema_name": {
										"value": "@pipeline().parameters.base_schema_name",
										"type": "Expression"
									},
									"base_table_name": {
										"value": "@pipeline().parameters.base_table_name",
										"type": "Expression"
									},
									"base_sproc_name": {
										"value": "@pipeline().parameters.base_sproc_name",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@pipeline().parameters.entity_id",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().parameters.run_id",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If Test for Duplicates",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Reset ADLS File Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(\r\n    equals(\r\n        pipeline().parameters.pk_field_names,\r\n        null\r\n    )\r\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Test for Duplicates",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ADLS_In_duplicatesTest",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"primary_key_columns": {
										"value": "@pipeline().parameters.pk_field_names",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@pipeline().parameters.entity_id",
										"type": "Expression"
									},
									"adls_directory_path": {
										"value": "@pipeline().parameters.adls_directory_path_In",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().parameters.run_id",
										"type": "Expression"
									},
									"source_layer": "In",
									"adls_container_name": {
										"value": "@pipeline().parameters.adls_container_name",
										"type": "Expression"
									},
									"file_name": {
										"value": "@variables('adlsFileName')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Reset ADLS File Name",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup ADLS File Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "adlsFileName",
					"value": {
						"value": "@activity('Lookup ADLS File Name').output.firstRow.file_name",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup ADLS File Name",
				"description": "In case ADLS ingestion was successful, but subsequent activities were not.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If ADLS ingestion required",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT file_name\nFROM [dbo].[get_scheduled_entities] (\n    1,\n    '@{pipeline().parameters.date}'\n)\nWHERE \n    last_run_status = 'Succeeded'\n    AND\n    entity_id = @{pipeline().parameters.entity_id}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_orch_db",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If ADLS ingestion required",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set ADLS File Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(\n    pipeline().parameters.required_activities,\n    'ADLSIngestion'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Execute Entity ADLS Ingestion",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ADLS_ingestion",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"entity_name": {
										"value": "@pipeline().parameters.entity_name",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@pipeline().parameters.entity_id",
										"type": "Expression"
									},
									"date": {
										"value": "@pipeline().parameters.date",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().parameters.run_id",
										"type": "Expression"
									},
									"layer_nk": {
										"value": "@pipeline().parameters.layer_nk",
										"type": "Expression"
									},
									"source_database_name": {
										"value": "@pipeline().parameters.source_database_name",
										"type": "Expression"
									},
									"source_schema_name": {
										"value": "@pipeline().parameters.source_schema_name",
										"type": "Expression"
									},
									"source_table_name": {
										"value": "@pipeline().parameters.source_table_name",
										"type": "Expression"
									},
									"source_date_field_name": {
										"value": "@pipeline().parameters.source_date_field_name",
										"type": "Expression"
									},
									"adls_container_name": {
										"value": "@pipeline().parameters.adls_container_name",
										"type": "Expression"
									},
									"adls_directory_path_In": {
										"value": "@pipeline().parameters.adls_directory_path_In",
										"type": "Expression"
									},
									"adls_file_name": {
										"value": "@variables('adlsFileName')",
										"type": "Expression"
									},
									"required_activities": {
										"value": "@pipeline().parameters.required_activities",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If Processing Source File Required",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Test for Duplicates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(\n    pipeline().parameters.required_activities,\n    'SourceFileProcessing'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Process Source File",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ADLS_process",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"entity_name": {
										"value": "@pipeline().parameters.entity_name",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@pipeline().parameters.entity_id",
										"type": "Expression"
									},
									"date": {
										"value": "@pipeline().parameters.date",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().parameters.run_id",
										"type": "Expression"
									},
									"client_field": {
										"value": "@pipeline().parameters.client_field",
										"type": "Expression"
									},
									"extraction_type": {
										"value": "@pipeline().parameters.extraction_type",
										"type": "Expression"
									},
									"adls_container_name": {
										"value": "@pipeline().parameters.adls_container_name",
										"type": "Expression"
									},
									"adls_directory_path_In": {
										"value": "@pipeline().parameters.adls_directory_path_In",
										"type": "Expression"
									},
									"adls_directory_path_Out": {
										"value": "@pipeline().parameters.adls_directory_path_Out",
										"type": "Expression"
									},
									"adls_file_name": {
										"value": "@variables('adlsFileName')",
										"type": "Expression"
									},
									"layer_nk": {
										"value": "@pipeline().parameters.layer_nk",
										"type": "Expression"
									},
									"application_id": {
										"value": "@pipeline().parameters.source_database_name",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If Synapse Ingestion Required",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Processing Source File Required",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(\n    pipeline().parameters.required_activities,\n    'SynapseIngestion'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Ingest Parquet into Synapse Base",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ADLS_SYNDW_ingestion",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"base_schema_name": {
										"value": "@pipeline().parameters.base_schema_name",
										"type": "Expression"
									},
									"base_table_name": {
										"value": "@pipeline().parameters.base_table_name",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@pipeline().parameters.entity_id",
										"type": "Expression"
									},
									"directory_path": {
										"value": "@pipeline().parameters.adls_directory_path_Out",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().parameters.run_id",
										"type": "Expression"
									},
									"source_layer": "Out",
									"file_name": {
										"value": "@variables('adlsFileName')",
										"type": "Expression"
									},
									"adls_container_name": {
										"value": "@pipeline().parameters.adls_container_name",
										"type": "Expression"
									},
									"target_layer": "Base"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"entity_name": {
				"type": "string",
				"defaultValue": "I_CostCenter_F"
			},
			"entity_id": {
				"type": "string",
				"defaultValue": "1"
			},
			"date": {
				"type": "string",
				"defaultValue": "2022/04/21"
			},
			"run_id": {
				"type": "string",
				"defaultValue": "a1fe4011-b0aa-4e82-814e-5521537c78db"
			},
			"layer_nk": {
				"type": "string",
				"defaultValue": "S4H"
			},
			"client_field": {
				"type": "string",
				"defaultValue": "MANDT"
			},
			"extraction_type": {
				"type": "string",
				"defaultValue": "ODP"
			},
			"pk_field_names": {
				"type": "string",
				"defaultValue": "CONTROLLINGAREA, COSTCENTER, VALIDITYENDDATE"
			},
			"source_database_name": {
				"type": "string"
			},
			"source_schema_name": {
				"type": "string"
			},
			"source_table_name": {
				"type": "string",
				"defaultValue": "I_CostCenter"
			},
			"source_date_field_name": {
				"type": "string"
			},
			"adls_container_name": {
				"type": "string",
				"defaultValue": "s4h-cad"
			},
			"adls_directory_path_In": {
				"type": "string",
				"defaultValue": "DIMENSION/I_CostCenter_F/Theobald/ODP/Full/In/2022/04/11"
			},
			"adls_directory_path_Out": {
				"type": "string",
				"defaultValue": "DIMENSION/I_CostCenter_F/Theobald/ODP/Full/Out/2022/04/11"
			},
			"base_schema_name": {
				"type": "string",
				"defaultValue": "base_s4h_cax"
			},
			"base_sproc_name": {
				"type": "string"
			},
			"base_table_name": {
				"type": "string",
				"defaultValue": "I_CostCenter"
			},
			"required_activities": {
				"type": "array",
				"defaultValue": [
					"ADLSIngestion",
					"StartXUExtraction",
					"CheckXUExtractionStatus",
					"StoreXUExtractionLogs"
				]
			}
		},
		"variables": {
			"adlsFileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "00 ELT"
		},
		"annotations": []
	}
}