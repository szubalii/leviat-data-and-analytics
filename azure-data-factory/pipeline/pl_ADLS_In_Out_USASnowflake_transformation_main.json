{
	"name": "pl_ADLS_In_Out_USASnowflake_transformation_main",
	"properties": {
		"activities": [
			{
				"name": "Get all USA Snowflake entities",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_start_log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM [dbo].[get_USASnowflake_entities_BlobInToBlobOut] (@{pipeline().parameters.adhoc},@{pipeline().parameters.manual_run}, '@{pipeline().parameters.date}')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_orch_db",
						"type": "DatasetReference",
						"parameters": {
							"sqlDb": {
								"value": "@pipeline().globalParameters.sqlDb",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each USA Snowflake entity",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get all USA Snowflake entities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get all USA Snowflake entities').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy from Blob In to Blob Out",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ADLS_In_Out_USASnowflake_transformation",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"source_adls_directory_path": {
										"value": "@item().source_adls_directory_path",
										"type": "Expression"
									},
									"file_name": {
										"value": "@item().file_name",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@item().entity_id",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"adls_container_name": {
										"value": "@item().adls_container_name",
										"type": "Expression"
									},
									"target_adls_directory_path": {
										"value": "@item().target_adls_directory_path",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "act_exec_sproc_start_log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Stringify Parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[set_pipeline_log]",
					"storedProcedureParameters": {
						"message": {
							"value": {
								"value": "@{pipeline().TriggerType} execution triggered at @{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"start_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"status": {
							"value": "InProgress",
							"type": "String"
						},
						"user_name": {
							"value": {
								"value": "@pipeline().GroupId",
								"type": "Expression"
							},
							"type": "String"
						},
						"parent_run_id": {
							"value": {
								"value": "@pipeline().parameters.parent_run_id",
								"type": "Expression"
							}
						},
						"parameters": {
							"value": {
								"value": "@variables('parameters')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference",
					"parameters": {
						"sqlDb": {
							"value": "@pipeline().globalParameters.sqlDb",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "act_exec_sproc_log_success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "For Each USA Snowflake entity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[change_status_pipeline_log]",
					"storedProcedureParameters": {
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"message": {
							"value": {
								"value": "Finished successfully",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"status": {
							"value": {
								"value": "Succeeded",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference",
					"parameters": {
						"sqlDb": {
							"value": "@pipeline().globalParameters.sqlDb",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "act_exec_log_failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "For Each USA Snowflake entity",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[change_status_pipeline_log]",
					"storedProcedureParameters": {
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"message": {
							"value": {
								"value": "Execution Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference",
					"parameters": {
						"sqlDb": {
							"value": "@pipeline().globalParameters.sqlDb",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Log Exception",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get all USA Snowflake entities",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": null,
							"type": "Guid"
						},
						"category": {
							"value": "InternalError",
							"type": "String"
						},
						"entity_id": {
							"value": null,
							"type": "Int64"
						},
						"error_msg": {
							"value": {
								"value": "@activity('Get all USA Snowflake entities').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference",
					"parameters": {
						"sqlDb": {
							"value": "@pipeline().globalParameters.sqlDb",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "act_exec_log_failure_InternalError",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Exception",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[change_status_pipeline_log]",
					"storedProcedureParameters": {
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"message": {
							"value": {
								"value": "Execution Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference",
					"parameters": {
						"sqlDb": {
							"value": "@pipeline().globalParameters.sqlDb",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Stringify Parameters",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Parameters for Run",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "parameters",
					"value": {
						"value": "@string(activity('Get Parameters for Run').output.parameters)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Parameters for Run",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(\n    'https://management.azure.com/subscriptions/',\n    'f199b488-7d9d-4992-aeda-c10a1e1c9b9e',\n    '/resourceGroups/',\n    pipeline().globalParameters.resourceGroupName,\n    '/providers/Microsoft.DataFactory/factories/',\n    pipeline().DataFactory,\n    if(equals(pipeline().TriggerName, 'Sandbox'), '/sandboxpipelineruns/', '/pipelineruns/'),\n    pipeline().RunId,\n    if(equals(pipeline().TriggerName, 'Sandbox'), '?api-version=2017-09-01-preview', '?api-version=2018-06-01')\n)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://management.core.windows.net/"
					}
				}
			}
		],
		"parameters": {
			"date": {
				"type": "string"
			},
			"adhoc": {
				"type": "int",
				"defaultValue": 0
			},
			"source_layer": {
				"type": "string",
				"defaultValue": "In"
			},
			"target_layer": {
				"type": "string",
				"defaultValue": "Out"
			},
			"manual_run": {
				"type": "int",
				"defaultValue": 0
			},
			"parent_run_id": {
				"type": "string"
			}
		},
		"variables": {
			"parameters": {
				"type": "String"
			}
		},
		"folder": {
			"name": "00 ELT/03 ADLS Transformation/USA Snowflake"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-25T15:25:02Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}