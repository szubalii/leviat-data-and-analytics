{
	"name": "pl_ADLS_In_duplicatesTest",
	"properties": {
		"activities": [
			{
				"name": "Check if duplicates exist",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_set_batch_testData_InProgress",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "SELECT top 1\n    count(1) COUNTR, @{pipeline().parameters.primary_key_columns}\nFROM\n    OPENROWSET(\n        BULK 'https://@{pipeline().globalParameters.storageAccountName}.dfs.core.windows.net/@{pipeline().parameters.adls_container_name}/@{pipeline().parameters.adls_directory_path}/@{pipeline().parameters.file_name}',\n        FORMAT = 'PARQUET'\n    ) AS [result_count]\ngroup by @{pipeline().parameters.primary_key_columns}\nhaving count(1) > 1",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_synod__synapse_od",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "act_exec_sproc_set_batch_testData_InProgress",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[set_batch]",
					"storedProcedureParameters": {
						"activity": {
							"value": "TestDuplicates",
							"type": "String"
						},
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						},
						"status": {
							"value": "InProgress",
							"type": "String"
						},
						"start_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						},
						"source_layer": {
							"value": {
								"value": "@pipeline().parameters.source_layer",
								"type": "Expression"
							}
						},
						"target_layer": {
							"value": {
								"value": "@pipeline().parameters.source_layer",
								"type": "Expression"
							}
						},
						"file_name": {
							"value": {
								"value": "@pipeline().parameters.file_name",
								"type": "Expression"
							}
						},
						"directory_path": {
							"value": {
								"value": "@pipeline().parameters.adls_directory_path",
								"type": "Expression"
							}
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "In case of duplicates",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check if duplicates exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(contains(activity('Check if duplicates exist').output, 'firstRow'), false)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "FailedDataTest",
								"errorCode": "500"
							}
						}
					]
				}
			},
			{
				"name": "act_exec_sproc_log_exception",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "In case of duplicates",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"category": {
							"value": "DuplicateRows",
							"type": "String"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"error_msg": {
							"value": {
								"value": "@join(\n    createArray(\n        join(\n            createArray(\n             'Duplicate entries found in file: '\n             ,pipeline().parameters.adls_container_name\n             ,pipeline().parameters.adls_directory_path\n             ,pipeline().parameters.file_name\n          ), '/'\n        )\n    )\n    ,\n' '\n)",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_update_batch_testData_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_log_exception",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_batch_status]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"activity": {
							"value": "TestDuplicates",
							"type": "String"
						},
						"status": {
							"value": "Failed",
							"type": "String"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_update_batch_testData_Succeeded",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "In case of duplicates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_batch_status]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"activity": {
							"value": "TestDuplicates",
							"type": "String"
						},
						"status": {
							"value": "Succeeded",
							"type": "String"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_log_exception_lookup",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check if duplicates exist",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"category": {
							"value": "InternalError",
							"type": "String"
						},
						"entity_id": {
							"value": null,
							"type": "Int64"
						},
						"error_msg": {
							"value": {
								"value": "@activity('Check if duplicates exist').output.Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_update_batch_testData_lookup_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_log_exception_lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_batch_status]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"activity": {
							"value": "TestDuplicates",
							"type": "String"
						},
						"status": {
							"value": "Failed",
							"type": "String"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"primary_key_columns": {
				"type": "string"
			},
			"entity_id": {
				"type": "string"
			},
			"adls_directory_path": {
				"type": "string"
			},
			"run_id": {
				"type": "string"
			},
			"source_layer": {
				"type": "string"
			},
			"adls_container_name": {
				"type": "string"
			},
			"file_name": {
				"type": "string"
			}
		},
		"variables": {
			"batch_id": {
				"type": "String",
				"defaultValue": "@guid()"
			}
		},
		"folder": {
			"name": "02 ADLS Data Validation"
		},
		"annotations": []
	}
}