{
	"name": "pl_AXBI_ADLS_ingestion_copy1",
	"properties": {
		"activities": [
			{
				"name": "Copy AXBI to ADLS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Query Without ColumnName Spaces",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 10,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@activity('Get Query Without ColumnName Spaces').output.firstRow.Query",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "stxxxxslsxeuw001",
							"type": "LinkedServiceReference",
							"parameters": {
								"storageAccount": {
									"value": "@pipeline().globalParameters.storageAccountName",
									"type": "Expression"
								}
							}
						},
						"path": "utilities/staging"
					}
				},
				"inputs": [
					{
						"referenceName": "ds_ls_axbi_x_TimeXtender__master",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.axbi_database_name",
								"type": "Expression"
							},
							"schema": {
								"value": "@pipeline().parameters.axbi_schema_name",
								"type": "Expression"
							},
							"table": {
								"value": "@pipeline().parameters.axbi_table_name",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_parquet_file",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.adls_container_name",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.adls_directory_path",
								"type": "Expression"
							},
							"file": {
								"value": "@pipeline().parameters.file_name",
								"type": "Expression"
							},
							"storageAccount": {
								"value": "@pipeline().globalParameters.storageAccountName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Get Query Without ColumnName Spaces",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "DECLARE @s VARCHAR(max)\nDECLARE @w VARCHAR(max)\nDECLARE @tablename VARCHAR(500) = '@{pipeline().parameters.axbi_table_name}'\nDECLARE @schemaname VARCHAR(500) = '@{pipeline().parameters.axbi_schema_name}'\nDECLARE @databasename VARCHAR(500) = '@{pipeline().parameters.axbi_database_name}'\nDECLARE @axbi_date_field_name VARCHAR(500) = '@{pipeline().parameters.axbi_date_field_name}'\n\nSELECT @s = ISNULL(@s + ', ','') + '[' + c.name + ']' + ' as [' + replace(c.name,' ','') + '] '\nFROM @{pipeline().parameters.axbi_database_name}.sys.all_columns c \nJOIN @{pipeline().parameters.axbi_database_name}.sys.tables t\nON c.object_id = t.object_id\nWHERE t.name =  @tablename\n\nSELECT @w = CASE \n    WHEN @axbi_date_field_name != '' AND @axbi_date_field_name IS NOT NULL\n    THEN ' WHERE ['+@axbi_date_field_name+'] >= ''2019-01-01'''\n    ELSE ''\nEND\n\nSELECT 'SELECT '+@s+' FROM ['+@databasename+'].['+@schemaname+'].['+@tablename+']'+@w AS Query",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_ls_axbi_x_TimeXtender__master",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.axbi_database_name",
								"type": "Expression"
							},
							"schema": {
								"value": "@pipeline().parameters.axbi_schema_name",
								"type": "Expression"
							},
							"table": {
								"value": "@pipeline().parameters.axbi_table_name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"axbi_database_name": {
				"type": "string"
			},
			"axbi_schema_name": {
				"type": "string"
			},
			"axbi_table_name": {
				"type": "string"
			},
			"axbi_date_field_name": {
				"type": "string"
			},
			"adls_container_name": {
				"type": "string"
			},
			"adls_directory_path": {
				"type": "string"
			},
			"file_name": {
				"type": "string"
			}
		},
		"folder": {
			"name": "00 ELT/01 ADLS Ingestion/AXBI"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-25T15:25:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}