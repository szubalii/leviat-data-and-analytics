{
	"name": "pl_PBI_datasetRefresh_main",
	"properties": {
		"activities": [
			{
				"name": "Get TenantId from AKV",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set Pipeline Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(\n   pipeline().globalParameters.keyVaultUrl,\n   'secrets/',\n   variables('SecretName_TenantId'),\n   '/?api-version=7.0'\n)",
						"type": "Expression"
					},
					"method": "GET",
					"body": {
						"simple": "body"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get ClientId from AKV",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set Pipeline Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(\n    pipeline().globalParameters.keyVaultUrl,\n    'secrets/',\n    variables('SecretName_SPClientId'),\n    '/?api-version=7.0'\n)",
						"type": "Expression"
					},
					"method": "GET",
					"body": {
						"simple": "body"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Secret from AKV",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set Pipeline Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(\n   pipeline().globalParameters.keyVaultUrl\n,   'secrets/'\n,   variables('SecretName_SPSecret')\n,   '/?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"body": {
						"simple": "body"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Retrieve PBI Dataset GUIDs",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get TenantId from AKV",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get ClientId from AKV",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Secret from AKV",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * \nfrom [dbo].[get_pbi_entities] (\n    @{pipeline().parameters.adhoc},\n    '@{utcNow('yyyy-MM-dd')}'\n) \n@{pipeline().parameters.pbi_entity_filter}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_orch_db",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Dataset",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Start VM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Retrieve PBI Dataset GUIDs').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 3,
					"activities": [
						{
							"name": "Refresh PBI Dataset",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Get AAD Token",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_PBI_datasetRefresh",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"workspace_guid": {
										"value": "@item().workspace_guid",
										"type": "Expression"
									},
									"dataset_guid": {
										"value": "@item().dataset_guid",
										"type": "Expression"
									},
									"AAD_Token_Type": {
										"value": "@activity('Get AAD Token').output.token_type",
										"type": "Expression"
									},
									"AAD_Access_Token": {
										"value": "@activity('Get AAD Token').output.access_token",
										"type": "Expression"
									},
									"pbi_dataset_id": {
										"value": "@item().pbi_dataset_id",
										"type": "Expression"
									},
									"dataset_name": {
										"value": "@item().dataset_name",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Get AAD Token",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(\n    'https://login.microsoftonline.com/',\n    activity('Get TenantId from AKV').output.value,'/oauth2/token'\n)",
									"type": "Expression"
								},
								"method": "POST",
								"headers": {
									"Content-Type": "application/x-www-form-urlencoded"
								},
								"body": {
									"value": "@concat(\n    'grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',\n    activity('Get ClientId from AKV').output.value,'&client_secret=',\n    encodeUriComponent(activity('Get Secret from AKV').output.value)\n)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Log Eception AAD Token",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Get AAD Token",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[log_exception]",
								"storedProcedureParameters": {
									"category": {
										"value": "GetAADTokenFailed",
										"type": "String"
									},
									"error_msg": {
										"value": {
											"value": "@activity('Get AAD Token').Error.Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Set Pipeline Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Stringify Parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[set_pipeline_log]",
					"storedProcedureParameters": {
						"message": {
							"value": {
								"value": "@{pipeline().TriggerType} execution triggered at @{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"start_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"status": {
							"value": "InProgress",
							"type": "String"
						},
						"user_name": {
							"value": {
								"value": "@pipeline().GroupId",
								"type": "Expression"
							},
							"type": "String"
						},
						"parent_run_id": {
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							}
						},
						"parameters": {
							"value": {
								"value": "@variables('parameters')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Exception PBI Datasets",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Retrieve PBI Dataset GUIDs",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": null,
							"type": "Guid"
						},
						"category": {
							"value": "InternalError",
							"type": "String"
						},
						"entity_id": {
							"value": null,
							"type": "Int64"
						},
						"error_msg": {
							"value": {
								"value": "@activity('Retrieve PBI Dataset GUIDs').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update Pipeline Log Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Exception PBI Datasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[change_status_pipeline_log]",
					"storedProcedureParameters": {
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"message": {
							"value": {
								"value": "Execution Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update Pipeline Log Failed Refresh",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach Dataset",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[change_status_pipeline_log]",
					"storedProcedureParameters": {
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"message": {
							"value": {
								"value": "Execution Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update Pipeline Log Successful",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach Dataset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[change_status_pipeline_log]",
					"storedProcedureParameters": {
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"message": {
							"value": {
								"value": "Finished successfully",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"status": {
							"value": {
								"value": "Succeeded",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Exception Secret",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get Secret from AKV",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"category": {
							"value": "GetSecretFromAKVFailed",
							"type": "String"
						},
						"error_msg": {
							"value": {
								"value": "@activity('Get Secret from AKV').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Exception ClientId",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get ClientId from AKV",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"category": {
							"value": "GetSecretFromAKVFailed",
							"type": "String"
						},
						"error_msg": {
							"value": {
								"value": "@activity('Get ClientId from AKV').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Exception TenantId",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get TenantId from AKV",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"category": {
							"value": "GetSecretFromAKVFailed",
							"type": "String"
						},
						"error_msg": {
							"value": {
								"value": "@activity('Get TenantId from AKV').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Start VM",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Retrieve PBI Dataset GUIDs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_VM_start",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Deallocate VM if PROD",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach Dataset",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(\n    equals(\n        pipeline().globalParameters.environment,\n        'prod'\n    ),\n    true,\n    false\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "pl_VM_deallocate",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_VM_deallocate",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					]
				}
			},
			{
				"name": "Stringify Parameters",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Parameters for Run",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "parameters",
					"value": {
						"value": "@string(activity('Get Parameters for Run').output.parameters)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Parameters for Run",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(\n    'https://management.azure.com/subscriptions/',\n    'f199b488-7d9d-4992-aeda-c10a1e1c9b9e',\n    '/resourceGroups/',\n    pipeline().globalParameters.resourceGroupName,\n    '/providers/Microsoft.DataFactory/factories/',\n    pipeline().DataFactory,'/pipelineruns/',\n    pipeline().RunId,\n    '?api-version=2018-06-01'\n)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://management.core.windows.net/"
					}
				}
			}
		],
		"parameters": {
			"adhoc": {
				"type": "string",
				"defaultValue": "0"
			},
			"pbi_entity_filter": {
				"type": "string",
				"defaultValue": "WHERE 'a' = 'a'"
			}
		},
		"variables": {
			"ProcessingErrors": {
				"type": "Boolean"
			},
			"AAD Token Type": {
				"type": "String"
			},
			"AAD Access Token": {
				"type": "String"
			},
			"SecretName_TenantId": {
				"type": "String",
				"defaultValue": "AADTenantId"
			},
			"SecretName_SPClientId": {
				"type": "String",
				"defaultValue": "PowerBIClientId"
			},
			"SecretName_SPSecret": {
				"type": "String",
				"defaultValue": "PowerBIClientSecret"
			},
			"parameters": {
				"type": "String"
			}
		},
		"folder": {
			"name": "00 ELT/06 Power BI"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}