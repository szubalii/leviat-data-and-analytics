{
	"name": "pl_AXBI_ADLS_ingestion",
	"properties": {
		"activities": [
			{
				"name": "act_copy_AXBI_toParquet",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "GetQueryWithoutColumnNameSpaces",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 10,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "t_applicationId",
								"value": {
									"value": "@pipeline().parameters.axbi_database_name",
									"type": "Expression"
								}
							},
							{
								"name": "t_jobId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "t_jobBy",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							{
								"name": "t_filePath",
								"value": {
									"value": "@join(createArray(\n    pipeline().parameters.adls_container_name\n    ,pipeline().parameters.adls_directory_path\n    ,pipeline().parameters.file_name)\n    ,'/'\n)",
									"type": "Expression"
								}
							}
						],
						"sqlReaderQuery": {
							"value": "@activity('GetQueryWithoutColumnNameSpaces').output.firstRow.Query",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "stxxxxslsxeuw001",
							"type": "LinkedServiceReference"
						},
						"path": "utilities/staging"
					}
				},
				"inputs": [
					{
						"referenceName": "ds_ls_axbi_x_TimeXtender__master",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.axbi_database_name",
								"type": "Expression"
							},
							"schema": {
								"value": "@pipeline().parameters.axbi_schema_name",
								"type": "Expression"
							},
							"table": {
								"value": "@pipeline().parameters.axbi_table_name",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_parquet_file",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.adls_container_name",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.adls_directory_path",
								"type": "Expression"
							},
							"file": {
								"value": "@pipeline().parameters.file_name",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "GetQueryWithoutColumnNameSpaces",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_set_batch_AXBIToBlobIn_InProgress",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "DECLARE @s VARCHAR(max)\nDECLARE @w VARCHAR(max)\nDECLARE @tablename VARCHAR(500) = '@{pipeline().parameters.axbi_table_name}'\nDECLARE @schemaname VARCHAR(500) = '@{pipeline().parameters.axbi_schema_name}'\nDECLARE @databasename VARCHAR(500) = '@{pipeline().parameters.axbi_database_name}'\nDECLARE @axbi_date_field_name VARCHAR(500) = '@{pipeline().parameters.axbi_date_field_name}'\n\nSELECT @s = ISNULL(@s + ', ','') + '[' + c.name + ']' + ' as [' + replace(c.name,' ','') + '] '\nFROM @{pipeline().parameters.axbi_database_name}.sys.all_columns c \nJOIN @{pipeline().parameters.axbi_database_name}.sys.tables t\nON c.object_id = t.object_id\nWHERE t.name =  @tablename\n\nSELECT @w = CASE \n    WHEN @axbi_date_field_name != '' AND @axbi_date_field_name IS NOT NULL\n    THEN ' WHERE ['+@axbi_date_field_name+'] >= ''2019-01-01'''\n    ELSE ''\nEND\n\nSELECT 'SELECT '+@s+' FROM ['+@databasename+'].['+@schemaname+'].['+@tablename+']'+@w AS Query",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_ls_axbi_x_TimeXtender__master",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.axbi_database_name",
								"type": "Expression"
							},
							"schema": {
								"value": "@pipeline().parameters.axbi_schema_name",
								"type": "Expression"
							},
							"table": {
								"value": "@pipeline().parameters.axbi_table_name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "act_exec_sproc_set_batch_AXBIToBlobIn_InProgress",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[set_batch]",
					"storedProcedureParameters": {
						"activity": {
							"value": "AXBIToBlobIn",
							"type": "String"
						},
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"file_path": {
							"value": {
								"value": "@join(createArray(\n        pipeline().parameters.adls_container_name,\n        pipeline().parameters.adls_directory_path,\n        pipeline().parameters.file_name),\n        '/'\n    )",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						},
						"source_layer": {
							"value": "AXBI",
							"type": "String"
						},
						"status": {
							"value": "InProgress",
							"type": "String"
						},
						"target_layer": {
							"value": "In",
							"type": "String"
						},
						"start_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						},
						"file_name": {
							"value": {
								"value": "@pipeline().parameters.file_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"directory_path": {
							"value": {
								"value": "@pipeline().parameters.adls_directory_path",
								"type": "Expression"
							}
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_update_batch_AXBIToBlobIn_Succeeded",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "act_copy_AXBI_toParquet",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_batch_status]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"size_bytes": {
							"value": {
								"value": "@activity('act_copy_AXBI_toParquet').output.dataWritten",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"activity": {
							"value": "AXBIToBlobIn",
							"type": "String"
						},
						"status": {
							"value": "Succeeded",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_update_batch_AXBIToBlobIn_copy_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_log_exception_InternalError_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_batch_status]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"activity": {
							"value": "AXBIToBlobIn",
							"type": "String"
						},
						"status": {
							"value": "Failed",
							"type": "String"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_log_exception_InternalError",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GetQueryWithoutColumnNameSpaces",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"category": {
							"value": "InternalError",
							"type": "String"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"error_msg": {
							"value": {
								"value": "@activity('GetQueryWithoutColumnNameSpaces').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_update_batch_AXBIToBlobIn_lookup_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "act_exec_sproc_log_exception_InternalError",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_batch_status]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"end_date_time": {
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"activity": {
							"value": "AXBIToBlobIn",
							"type": "String"
						},
						"status": {
							"value": "Failed",
							"type": "String"
						},
						"size_bytes": {
							"value": null,
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "act_exec_sproc_log_exception_InternalError_copy1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "act_copy_AXBI_toParquet",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[log_exception]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@variables('batch_id')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"category": {
							"value": "InternalError",
							"type": "String"
						},
						"entity_id": {
							"value": {
								"value": "@pipeline().parameters.entity_id",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"error_msg": {
							"value": {
								"value": "@activity('act_copy_AXBI_toParquet').Error.Message",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@pipeline().parameters.run_id",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"axbi_database_name": {
				"type": "string"
			},
			"axbi_schema_name": {
				"type": "string"
			},
			"axbi_table_name": {
				"type": "string"
			},
			"axbi_date_field_name": {
				"type": "string"
			},
			"adls_container_name": {
				"type": "string"
			},
			"adls_directory_path": {
				"type": "string"
			},
			"file_name": {
				"type": "string"
			},
			"run_id": {
				"type": "string"
			},
			"entity_id": {
				"type": "string"
			}
		},
		"variables": {
			"batch_id": {
				"type": "String",
				"defaultValue": "@guid()"
			}
		},
		"folder": {
			"name": "01 ADLS Ingestion/AXBI"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-25T15:25:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}