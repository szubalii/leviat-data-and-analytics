{
	"name": "pl_ADLS_ingestion_S4H",
	"properties": {
		"activities": [
			{
				"name": "If XU extraction status is FinishedNoErrors",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set XU Extraction Status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('extraction_status'),'FinishedNoErrors')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "act_exec_sproc_log_exception_FailedExtraction",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[log_exception]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"category": {
										"value": "FailedExtraction",
										"type": "String"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"error_msg": {
										"value": {
											"value": "@concat(\n\t'XU extraction status is '\n\t,variables('extraction_status')\n        ,' for '\n        ,pipeline().parameters.extraction_name\n        ,' entity.'\n\n)",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "act_exec_update_batch_S4HToBlobIn_Faild",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_exec_sproc_log_exception_FailedExtraction",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"status": {
										"value": "Failed",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "FailedExtraction",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "act_exec_update_batch_S4HToBlobIn_Faild",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "FailedExtraction",
								"errorCode": "XU_extraction_error"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "act_exec_sproc_update_batch_Succeeded",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"status": {
										"value": "Succeeded",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "If Starting XU Extraction",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If empty run_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(\n    pipeline().parameters.required_activities,\n    'StartXUExtraction'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Start XU Extraction",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set Start XU Extraction Batch",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(\n\tpipeline().globalParameters.XU_hostName\n\t,'/?name='\n\t,pipeline().parameters.extraction_name\n\t,'&source='\n\t,pipeline().globalParameters.XU_sourceName\n\t,'&destination='\n\t,pipeline().globalParameters.storageAccountName,'_',pipeline().globalParameters.S4H_systemID\n\t,'&wait=false'\n)",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "ir-WEXLEVAPP001",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET"
							}
						},
						{
							"name": "Set Timestamp Variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Start XU Extraction",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "extraction_timestamp",
								"value": {
									"value": "@activity('Start XU Extraction').output.response",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Start XU Extraction Batch",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[set_batch]",
								"storedProcedureParameters": {
									"activity": {
										"value": "StartXUExtraction",
										"type": "String"
									},
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StartXUExtraction')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"file_path": {
										"value": null,
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('run_id')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"source_layer": {
										"value": {
											"value": "S4H",
											"type": "Expression"
										},
										"type": "String"
									},
									"status": {
										"value": "InProgress",
										"type": "String"
									},
									"target_layer": {
										"value": {
											"value": "In",
											"type": "Expression"
										},
										"type": "String"
									},
									"start_date_time": {
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "Datetime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update Start XU Extraction Batch Failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Start XU Extraction",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"status": {
										"value": "Failed",
										"type": "String"
									},
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StartXUExtraction')",
											"type": "Expression"
										}
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Log Exception",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Update Start XU Extraction Batch Failed",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[log_exception]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StartXUExtraction')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"category": {
										"value": "FailedStartXUExtraction",
										"type": "String"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"error_msg": {
										"value": {
											"value": "@activity('Start XU Extraction').Error.Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Update Start XU Extraction Batch Succeeded",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Set S4H ADLS File Name",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StartXUExtraction')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"file_name": {
										"value": {
											"value": "@variables('adlsFileName')",
											"type": "Expression"
										},
										"type": "String"
									},
									"directory_path": {
										"value": {
											"value": "@pipeline().parameters.adls_directory_path",
											"type": "Expression"
										},
										"type": "String"
									},
									"status": {
										"value": "Succeeded",
										"type": "String"
									},
									"output": {
										"value": {
											"value": "@concat(\n    '{\"timestamp\":\"',\n    variables('extraction_timestamp'),\n    '\"}'\n)",
											"type": "Expression"
										},
										"type": "String"
									},
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										}
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set S4H ADLS File Name",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Timestamp Variable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "adlsFileName",
								"value": {
									"value": "@concat(\n    pipeline().parameters.extraction_name,\n    '_',\n    replace(replace(replace(variables('extraction_timestamp'),'-','_'),':','_'),'.','_'),\n    '.parquet'\n)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "If Store Extraction Logs",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Get XU Extraction Status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(\n    pipeline().parameters.required_activities,\n    'StoreXUExtractionLogs'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "act_web_GetExtractionLogs",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set Store XU Extraction Logs Batch",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 10,
								"retryIntervalInSeconds": 60,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(\n\tpipeline().globalParameters.XU_hostName\n\t,'/log/?req_type=extraction&name='\n\t,pipeline().parameters.extraction_name\n\t,'&source='\n\t,pipeline().globalParameters.XU_sourceName\n\t,'&destination='\n\t,pipeline().globalParameters.storageAccountName,'_',pipeline().globalParameters.S4H_systemID\n\t,'&timestamp='\n\t,variables('extraction_timestamp')\n)",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "ir-WEXLEVAPP001",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET"
							}
						},
						{
							"name": "act_copy_ExtractionLogsToAdls",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "act_web_GetExtractionLogs",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "OutputText",
											"value": {
												"value": "@activity('act_web_GetExtractionLogs').output.response",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".csv"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "OutputText",
												"type": "String"
											},
											"sink": {
												"type": "String",
												"physicalType": "String",
												"ordinal": 1
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_adls_csv_file_first_row_header_disabled",
									"type": "DatasetReference",
									"parameters": {
										"container": "adf-jobs",
										"directory": "Xtract Universal",
										"file": "empty_csv_source.csv"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_csv_file_first_row_header_disabled",
									"type": "DatasetReference",
									"parameters": {
										"container": "adf-jobs",
										"directory": {
											"value": "@concat(\n    'Xtract Universal/',\n    pipeline().parameters.extraction_name, \n    '/',\n    formatDateTime(pipeline().parameters.date, 'yyyy/MM/dd')\n)",
											"type": "Expression"
										},
										"file": {
											"value": "@concat(\n    pipeline().parameters.extraction_name,\n    '_extraction_log_',\n    replace(replace(replace(variables('extraction_timestamp'),'-','_'),':','_'),'.','_'),\n    '.csv'\n)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "act_exec_sproc_log_exception_InternalError",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_exec_sproc_get_logs_update_batch_Faild",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[log_exception]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StoreXUExtractionLog')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"category": {
										"value": "InternalError",
										"type": "String"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"error_msg": {
										"value": {
											"value": "@activity('act_copy_ExtractionLogsToAdls').Error.Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "act_exec_sproc_get_logs_update_batch_Faild",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_copy_ExtractionLogsToAdls",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StoreXUExtractionLog')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"status": {
										"value": "Failed",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "act_exec_sproc_get_logs_log_exception",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_web_GetExtractionLogs",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[log_exception]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StoreXUExtractionLog')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"category": {
										"value": "FailedLogsXUExtraction",
										"type": "String"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"error_msg": {
										"value": {
											"value": "@activity('act_web_GetExtractionLogs').Error.Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "act_set_ExtractionResultVar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "act_copy_ExtractionLogsToAdls",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "extraction_log",
								"value": {
									"value": "@activity('act_web_GetExtractionLogs').output.response",
									"type": "Expression"
								}
							}
						},
						{
							"name": "act_exec_sproc_get_logs_update_batch_Faild_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_web_GetExtractionLogs",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StoreXUExtractionLog')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"status": {
										"value": "Failed",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "act_exec_sproc_get_logs_update_batch_Faild_copy2",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "act_set_ExtractionResultVar",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_batch_status]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StoreXUExtractionLog')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"end_date_time": {
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"status": {
										"value": "Succeeded",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set Store XU Extraction Logs Batch",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[set_batch]",
								"storedProcedureParameters": {
									"activity": {
										"value": "StoreXUExtractionLog",
										"type": "String"
									},
									"batch_id": {
										"value": {
											"value": "@variables('batch_id_StoreXUExtractionLog')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"directory_path": {
										"value": null,
										"type": "String"
									},
									"entity_id": {
										"value": {
											"value": "@pipeline().parameters.entity_id",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"file_name": {
										"value": null,
										"type": "String"
									},
									"file_path": {
										"value": null,
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().parameters.run_id",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"size_bytes": {
										"value": null,
										"type": "Int64"
									},
									"source_layer": {
										"value": null,
										"type": "String"
									},
									"start_date_time": {
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"status": {
										"value": "InProgress",
										"type": "String"
									},
									"target_layer": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlsrv_xxxx_sls_x_euw_001__sqldb_xxxx_sls_x_euw_001",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "If Get XU Extraction Status",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Starting XU Extraction",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(\n    pipeline().parameters.required_activities,\n    'CheckXUExtractionStatus'\n)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Execute Get Extraction Status",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_GetExtractionStatus",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"extraction_name": {
										"value": "@pipeline().parameters.extraction_name",
										"type": "Expression"
									},
									"date": {
										"value": "@pipeline().parameters.date",
										"type": "Expression"
									},
									"run_id": {
										"value": "@pipeline().parameters.run_id",
										"type": "Expression"
									},
									"entity_id": {
										"value": "@pipeline().parameters.entity_id",
										"type": "Expression"
									},
									"extraction_timestamp": {
										"value": "@variables('extraction_timestamp')",
										"type": "Expression"
									},
									"batch_id": {
										"value": "@variables('batch_id_CheckXUExtractionStatus')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "If empty run_id",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(pipeline().parameters.run_id)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set run_id from parameter",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "run_id",
								"value": {
									"value": "@pipeline().parameters.run_id",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set run_id from pipeline",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "run_id",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup XU Extraction Status",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If Get XU Extraction Status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT output\nFROM batch\nWHERE\n    batch_id = '@{variables('batch_id_CheckXUExtractionStatus')}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_orch_db",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set XU Extraction Status",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup XU Extraction Status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "extraction_status",
					"value": {
						"value": "@activity('Lookup XU Extraction Status').output.value",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"extraction_name": {
				"type": "string"
			},
			"date": {
				"type": "string"
			},
			"run_id": {
				"type": "string"
			},
			"entity_id": {
				"type": "int"
			},
			"adls_directory_path": {
				"type": "string"
			},
			"required_activities": {
				"type": "string"
			}
		},
		"variables": {
			"extraction_timestamp": {
				"type": "String"
			},
			"extraction_status": {
				"type": "String"
			},
			"extraction_log": {
				"type": "String"
			},
			"batch_id_StartXUExtraction": {
				"type": "String",
				"defaultValue": "@guid()"
			},
			"adlsFileName": {
				"type": "String"
			},
			"run_id": {
				"type": "String"
			},
			"batch_id_CheckXUExtractionStatus": {
				"type": "String",
				"defaultValue": "@guid()"
			},
			"batch_id_StoreXUExtractionLog": {
				"type": "String",
				"defaultValue": "@guid()"
			}
		},
		"folder": {
			"name": "00 ELT/01 ADLS Ingestion/S4H"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-25T15:25:00Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}