{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_parquet_file",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_parquet_file",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ObjectID as string,",
				"          ProcessingTypeCode as string,",
				"          ProcessingTypeCodeText as string,",
				"          ID as string,",
				"          ExternalID as string,",
				"          UUID as string,",
				"          ProspectPartyID as string,",
				"          Name as string,",
				"          PrimaryContactPartyID as string,",
				"          PriorityCode as string,",
				"          PriorityCodeText as string,",
				"          OriginTypeCode as string,",
				"          OriginTypeCodeText as string,",
				"          LifeCycleStatusCode as string,",
				"          LifeCycleStatusCodeText as string,",
				"          ExternalUserStatusCode as string,",
				"          ExternalUserStatusCodeText as string,",
				"          ResultReasonCode as string,",
				"          ResultReasonCodeText as string,",
				"          SalesCycleCode as string,",
				"          SalesCycleCodeText as string,",
				"          SalesCyclePhaseCode as string,",
				"          SalesCyclePhaseCodeText as string,",
				"          ProcessStatusValidSinceDate as timestamp,",
				"          SalesCyclePhaseStartDate as timestamp,",
				"          ProbabilityPercent as decimal(38,18),",
				"          HeaderRevenueSchedule as boolean,",
				"          SalesRevenueForecastRelevanceIndicator as boolean,",
				"          ExpectedRevenueAmount as decimal(38,18),",
				"          ExpectedRevenueAmountCurrencyCode as string,",
				"          ExpectedRevenueAmountCurrencyCodeText as string,",
				"          TotalExpectedNetAmount as decimal(38,18),",
				"          TotalExpectedNetAmountAmountCurrencyCode as string,",
				"          TotalExpectedNetAmountAmountCurrencyCodeText as string,",
				"          WeightedExpectedNetAmount as decimal(38,18),",
				"          WeightedExpectedNetAmountCurrencyCode as string,",
				"          WeightedExpectedNetAmountCurrencyCodeText as string,",
				"          ExpectedProcessingStartDate as string,",
				"          ExpectedProcessingEndDate as string,",
				"          ExpectedRevenueStartDate as string,",
				"          ExpectedRevenueEndDate as string,",
				"          SalesForecastCategoryCode as string,",
				"          SalesForecastCategoryCodeText as string,",
				"          GroupCode as string,",
				"          GroupCodeText as string,",
				"          SalesUnitPartyID as string,",
				"          SalesOrganisationID as string,",
				"          DistributionChannelCode as string,",
				"          DistributionChannelCodeText as string,",
				"          DivisionCode as string,",
				"          DivisionCodeText as string,",
				"          SalesOfficeID as string,",
				"          SalesGroupID as string,",
				"          SalesTerritoryID as string,",
				"          MainEmployeeResponsiblePartyID as string,",
				"          EndBuyerPartyID as string,",
				"          ProductRecepientPartyID as string,",
				"          ApproverPartyID as string,",
				"          PayerPartyID as string,",
				"          BillToPartyID as string,",
				"          SellerPartyID as string,",
				"          PhaseProgressEvaluationStatusCode as string,",
				"          PhaseProgressEvaluationStatusCodeText as string,",
				"          ProspectBudgetAmount as decimal(38,18),",
				"          ProspectBudgetAmountCurrencyCode as string,",
				"          ProspectBudgetAmountCurrencyCodeText as string,",
				"          Score as integer,",
				"          MainEmployeeResponsiblePartyName as string,",
				"          SalesUnityPartyName as string,",
				"          BillToPartyName as string,",
				"          ProductRecipientPartyName as string,",
				"          SellerPartyName as string,",
				"          PayerPartyName as string,",
				"          EndBuyerPartyName as string,",
				"          PrimaryContactPartyName as string,",
				"          ProspectPartyName as string,",
				"          ApproverPartyName as string,",
				"          SalesOrganisationName as string,",
				"          SalesOfficeName as string,",
				"          SalesGroupName as string,",
				"          SalesTerritoryName as string,",
				"          ConsistencyStatusCode as string,",
				"          ConsistencyStatusCodeText as string,",
				"          ApprovalStatusCode as string,",
				"          ApprovalStatusCodeText as string,",
				"          CreationDate as timestamp,",
				"          LastChangeDate as timestamp,",
				"          CreationDateTime as timestamp,",
				"          LastChangeDateTime as timestamp,",
				"          CreatedBy as string,",
				"          LastChangedBy as string,",
				"          CreatedByUUID as string,",
				"          LastChangedByUUID as string,",
				"          EntityLastChangedOn as timestamp,",
				"          ETag as timestamp,",
				"          BestConnectedColleague as string,",
				"          DealScore as decimal(38,18),",
				"          DealScoreReason as string,",
				"          FirstEmailReceivedOn as string,",
				"          FirstEmailSentOn as string,",
				"          LastDataHugSyncDateTime as string,",
				"          LastEmailReceivedFrom as string,",
				"          LastEmailReceivedOn as string,",
				"          LastEmailSentBy as string,",
				"          LastEmailSentOn as string,",
				"          LastMeetingOn as string,",
				"          NextMeetingOn as string,",
				"          NumberOfColleagues as integer,",
				"          NumberOfMeetings as integer,",
				"          NumberOfOtherPeopleAtCompany as integer,",
				"          NumberOfReceivedEmails as integer,",
				"          NumberOfSentEmails as integer,",
				"          AutoCreateContacts as boolean,",
				"          HugRank as integer,",
				"          ExternalProbabilityPercent as decimal(38,18),",
				"          Zclassification_KUT as string,",
				"          Zclassification_KUTText as string,",
				"          Zexpectedorderdate_KUT as string,",
				"          Zframe_KUT as string,",
				"          Zframe_KUTText as string,",
				"          Zinterproject_KUT as boolean,",
				"          ZlegacyIDopp_KUT as string,",
				"          Zleviatspecified_KUT as string,",
				"          Zoppclosedate_KUT as string,",
				"          Zoppstartdate_KUT as string,",
				"          Zopptype_KUT as string,",
				"          Zopptype_KUTText as string,",
				"          Zparentopportunity_KUT as string,",
				"          Zproductpillar_KUT as string,",
				"          ZprojectID_KUT as string,",
				"          Zprojectcountry_KUT as string,",
				"          Zprojectcountry_KUTText as string,",
				"          Zprojectdescription_KUT as string,",
				"          Zprojectpostalcode_KUT as string,",
				"          Zprojectstreet_KUT as string,",
				"          Zprojecttype1_KUT as string,",
				"          Zprojecttype1_KUTText as string,",
				"          Zprojecttype2_KUT as string,",
				"          Zprojecttype2_KUTText as string,",
				"          Zprojetcity_KUT as string,",
				"          Zsubmissiondate_KUT as string,",
				"          Zuserquoterequestor_KUT as string,",
				"          zbim_KUT as string,",
				"          zbim_KUTText as string,",
				"          t_jobId as string,",
				"          t_jobDtm as string,",
				"          t_jobBy as string,",
				"          t_applicationId as string,",
				"          t_filePath as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source1 select(mapColumn(",
				"          HeaderRevenueSchedule",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}