parameters:
- name: folder
  type: string

variables:
# In case of CI triggered pipelines (IndividualCI, triggered by git push),
# use the system predefined variable Build.SourceBranchName to get the correct variable template
- ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
  - template: ./variables-test.yml
  - name: deployEnvPrefix # override value to map main branch to TEST deployment environment
    value: '20_TEST'
- ${{ elseif eq(variables['Build.SourceBranchName'], 'qas') }}:
  - template: ./variables-qas.yml
  - name: deployEnvPrefix # override value to map main branch to TEST deployment environment
    value: '10_QAS'
- ${{ elseif eq(variables['Build.SourceBranchName'], 'prod') }}:
  - template: ./variables-prod.yml
  - name: deployEnvPrefix # override value to map main branch to TEST deployment environment
    value: '00_PROD'
# Get the personal variables template, user and deployment environment based on the source branch name. 
- ${{ elseif or(contains(variables['Build.SourceBranch'], '/feature/'), contains(variables['Build.SourceBranch'], '/users/')) }}:
  - template: ./variables-personal.yml
  - name: user
    value: ${{ split(variables['Build.SourceBranch'], '/')[3] }} #refs/heads/feature/mpors/...
  - name: deployEnvPrefix # override value to map main branch to DEV deployment environment
    value: ${{ format('30_DEV_{0}', upper(variables.user)) }}
  - name: commitId
    value: $(Build.SourceVersion)

stages:
- stage: UPDATE_BUILD_ID
  jobs:
  - job: Vars
    steps:
    - checkout: none
    - task: PowerShell@2
      displayName: Set the name of the build (i.e. the Build.BuildNumber)
      inputs:
        targetType: 'inline'
        script: |
          [string] $buildName = "$(resources.pipeline.build.sourceBranch)_$(Date:yyyyMMdd).$(Rev:r)"
          Write-Host "Setting the name of the build to '$buildName'."
          Write-Host "##vso[build.updatebuildnumber]$buildName"
- stage: DEPLOY
  jobs:
  - template: ./jobs-deploy-solution.yml
    parameters:
      folder: ${{ parameters.folder }}
      solution: ${{ upper(replace( parameters.folder, '-', '_')) }}
      deployEnvPrefix: ${{ variables.deployEnvPrefix }}