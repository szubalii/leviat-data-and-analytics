trigger: none

variables:

# Set these default values in case of manually triggered pipelines
# These values will be overriden for production environment
# - name: VMName
#   value: WEALEVAPP001
# - name: VMResourceGroup
#   value: rg-xxxx-sls-a-euw-001

- name: deployEnv
  value: ${{ upper(variables['Build.SourceBranchName']) }}
# In case of CI triggered pipelines (IndividualCI, triggered by git push),
# use the system predefined variable Build.SourceBranchName to get the correct variable template
- ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
  - template: ./variables-test.yml
  - name: deployEnv # override value to map main branch to TEST deployment environment
    value: 'TEST'
- ${{ elseif eq(variables['Build.SourceBranchName'], 'qas') }}:
  - template: ./variables-qas.yml
- ${{ elseif eq(variables['Build.SourceBranchName'], 'prod') }}:
  - template: ./variables-prod.yml
- ${{ elseif startsWith(variables['Build.SourceBranchName'], 'dev_') }}:
  - name: user
    value: $[ replace( variables['Build.SourceBranchName'], 'dev_', '') ]
  - template: ./variables-personal.yml
- ${{ elseif contains(variables['Build.SourceBranch'], '/dev/') }}:
  - name: user
    value: $[ variables['Build.SourceBranchName'] ]
  - template: ./variables-personal.yml
  - name: deployEnv # override value to map main branch to DEV deployment environment
    value: ${{ format('DEV_{0}', upper(variables['Build.SourceBranchName'])) }}
- ${{ elseif contains(variables['Build.SourceBranch'], '/feature/') }}:
  - name: user
    value: ${{ split(variables['Build.SourceBranchName'], '/')[1] }}
  - template: ./variables-personal.yml

# # Required for PR triggered pipelines as predefined system variable Build.SourceBranchName
# # equals value: 'merge'. Also, the predefined system variable System.PullRequest.TargetBranch 
# # is not available in templates. So use separate build pipelines for each env and pass this as parameter value
# # https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml#system-variables-devops-services


# store the latest source commit ID, used for running specific tests
- ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
  - name: commitId
    value: $(System.PullRequest.SourceCommitId)
- ${{ else }}:
  - name: commitId
    value: $(Build.SourceVersion)


stages:
- stage: INIT
  jobs:
  - job: VARIABLES
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.ComputerName -equals $(VMName)
    steps:
    - script: |
        echo system.pullRequest.targetBranch: $(system.pullRequest.targetBranch)
        echo user: $(user)
        echo dataFactoryName: $(dataFactoryName)
        echo sqlDatabaseName: $(sqlDatabaseName)
        echo synapseSqlPool: $(synapseSqlPool)
        echo storageAccountName: $(storageAccountName)
        echo xuPrefix: $(xuPrefix)
        echo branchName: $(branchName)
        echo destination: $(destination)
        echo Build.Reason: ${{ variables['Build.Reason'] }}
        echo Build.SourceBranchName: ${{ variables['Build.SourceBranchName'] }}
        echo deployEnv: $(deployEnv)
      displayName: Print Variables
    
  - template: ./jobs-pre-build.yml
    dependsOn: VARIABLES
- stage: BUILD
  jobs:
  - job: BUILD_SynapseDWH
    variables: 
    - template: ../synapse-dwh/build/variables.yml
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.ComputerName -equals $(VMName)
    steps:
    - template: ../synapse-dwh/build/steps-build.yml
    - template: ../synapse-dwh/build/steps-artifact.yml

  
  - job: BUILD_ADF
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.ComputerName -equals $(VMName)
    steps:
    - template: ../azure-data-factory/build/steps-build.yml
    - template: ../azure-data-factory/build/steps-artifact.yml

  - job: BUILD_Orchestration
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.ComputerName -equals $(VMName)
    steps:
    - template: ../orchestration/build/steps-build.yml
    - template: ../orchestration/build/steps-artifact.yml
  
  - job: BUILD_XtractUniversal
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.ComputerName -equals $(VMName)
    steps:
    - template: ../xu-config/build/steps-build.yml
    - template: ../xu-config/build/steps-artifact.yml
  
  - job: BUILD_SynapseServerless
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.ComputerName -equals $(VMName)
    steps:
    - template: ../synapse-workspace/build/steps-build.yml
    - template: ../synapse-workspace/build/steps-artifact.yml
