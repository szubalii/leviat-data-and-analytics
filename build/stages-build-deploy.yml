# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

parameters:
- name: folder
  type: string
- name: solution
  type: string
- name: deploy
  type: boolean
  default: false
- name: test
  type: boolean
  default: false
- name: hasVariables
  type: boolean
  default: false
- name: testPlan
  type: number
  default: 397

# - name: branch
#   type: string

variables:
- ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
  - template: ./variables-test.yml
- ${{ elseif eq(variables['Build.SourceBranchName'], 'qas') }}:
  - template: ./variables-qas.yml
- ${{ elseif eq(variables['Build.SourceBranchName'], 'prod') }}:
  - template: ./variables-prod.yml
- ${{ else }}: #if startsWith(variables['Build.SourceBranchName'], 'dev_') }}:
  - template: ./variables-personal.yml

stages:
- stage: CHECK
  jobs:
  - job: CHECK
    pool:
      name: 'VM'
      demands:
      - node.js
      - VisualStudio
      - Agent.Name -equals $(VMName)
    steps:
    - checkout: self
      fetchDepth: 0 # disables shallow fetch and results in correct return of git diff-tree
    - task: PowerShell@2
      displayName: 'Get Changed Files'
      inputs:
        targetType: 'inline'
        pwsh: true
        script: |
          Write-Host "$(System.DefaultWorkingDirectory)"
          $filePaths = $(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion))
          Write-Host "Changed files: $($filePaths)"

          $testCaseFilter = ""
          ForEach ($filePath in $filePaths) {

              $dir = "syndw_xxxx_sls_d_euw_001"
              $dirIndex = $filePath.IndexOf($dir)
              $fileTypeIndex = $filePath.IndexOf(".")
              $filePathWithoutExt = $filePath.SubString(0, $fileTypeIndex)

              if ($dirIndex -ne -1) {
                  $subFilePath = $filePathWithoutExt.SubString($dirIndex + $dir.Length)
                  $className = $subFilePath.Replace('/','.')
                  $testCaseFilter += "ClassName=Test.$className|"
              }

          #TODO filter on list of files for only sql files
          }
          
          # Remove the last | character
          if ($testCaseFilter.Length > 0) {
            $testCaseFilter = $testCaseFilter.SubString(0, $testCaseFilter.Length-1)
          } 
          Write-Host "$($testCaseFilter)"

          Write-Host "##vso[task.setvariable variable=testCaseFilter]$testCaseFilter"

          # $AzureDevOpsPAT = "$(ReadTestManagementPAT)"
          # $AzureDevOpsAuthenicationHeader = @{Authorization = 'Basic ' + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($AzureDevOpsPAT)")) }
          # $uri = "https://dev.azure.com/leviatazure/Leviat_Data_and_Analytics_DevOps/_apis/testplan/Plans/${{parameters.testPlan}}/suites?api-version=7.0"
              
          # Invoke-RestMethod -Uri $uri -Method get -Headers $AzureDevOpsAuthenicationHeader | ConvertTo-Json
    # - task: PowerShell@2
    #   displayName: 'Get Changed Files'
    #   inputs:
    #     targetType: 'filePath'
    #     filePath: '$(System.DefaultWorkingDirectory)/src/libs/get-test-case-filter.ps1'
    #     pwsh: True
- stage: BUILD
  jobs:
  # - template: ./jobs-pre-build.yml
  #   parameters:
  #     varGroup: DnA_DEV
  - template: ./jobs-build.yml
    parameters:
      solution: ${{ parameters.solution }}
      folder: ${{ parameters.folder }}
      artifact: ${{ parameters.deploy }}
      hasVariables: ${{ parameters.hasVariables }}
- ${{ if eq(parameters.deploy, true) }}:
  - stage: DEPLOY_${{ upper(variables['Build.SourceBranchName']) }}
    jobs:
    - deployment: Deploy_${{parameters.solution}}
      # variables:
      # - name: pathPrefix
      #   value: $(Pipeline.Workspace)
      pool:
        name: 'VM'
        demands:
        - node.js
        - VisualStudio
        - Python.Version
        - Agent.Name -equals $(VMName)
      # workspace:
      #   clean: all
      environment: ${{ upper(variables['Build.SourceBranchName']) }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: ../${{parameters.folder}}/build/steps-deploy.yml
# - ${{ if eq(parameters.test, true) }}:
#   - stage: TEST_${{ upper(variables['Build.SourceBranchName']) }}
#     jobs:
#     - job: TEST_${{ parameters.solution }}
#       pool:
#         name: 'VM'
#         demands:
#         - node.js
#         - VisualStudio
#         - Agent.Name -equals $(VMName)
#       steps:
#       # - task: PowerShell@2
#       #   displayName: '**Get Changed Files**'
#       #   inputs:
#       #     targetType: 'inline'
#       #     pwsh: true
#       #     script: |
#       #       $files = $(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion))
#       #       $AzureDevOpsPAT = $(ReadTestManagementPAT)
#       #       $AzureDevOpsAuthenicationHeader = @{Authorization = 'Basic ' + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($AzureDevOpsPAT)")) }
#       #       $uri = https://dev.azure.com/leviatazure/Leviat_Data_and_Analytics_DevOps/_apis/testplan/Plans/${{parameters.testPlan}}/suites?api-version=7.0

#       #       echo $files

#       #       Invoke-RestMethod -Uri $uri -Method get -Headers $AzureDevOpsAuthenicationHeader
#       - task: VSTest@2
#         displayName: 'Run Test Cases'
#         inputs:
#           testSelector: testPlan
#           testPlan: ${{parameters.testPlan}}
#           testSuite: 2647
#           testConfiguration: 6
#           searchFolder: '$(System.DefaultWorkingDirectory)/synapse-dwh/Test'
          # testFilterCriteria: 

      # - template: ../${{ parameters.folder }}/build/steps-test.yml

