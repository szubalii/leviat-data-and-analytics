# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

parameters:
- name: folder
  type: string
- name: solution
  type: string
- name: deploy
  type: booleam
  default: false
# - name: branch
#   type: string

variables:
- ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
  - template: ./variables-test.yml
- ${{ elseif eq(variables['Build.SourceBranchName'], 'qas') }}:
  - template: ./variables-qas.yml
- ${{ elseif eq(variables['Build.SourceBranchName'], 'prod') }}:
  - template: ./variables-prod.yml
- ${{ elseif startsWith(variables['Build.SourceBranchName'], 'dev_') }}:
  - template: ./variables-personal.yml

stages:
- stage: BUILD
  jobs:
  # - template: ./jobs-pre-build.yml
  #   parameters:
  #     varGroup: DnA_DEV
  - template: ./jobs-build.yml
    parameters:
      solution: ${{ parameters.solution }}
      folder: ${{ parameters.folder }}
      artifact: ${{ parameters.deploy }}
- ${{ eq(parameters.deploy, true) }}:
  - stage: DEPLOY_${{ upper(variables['Build.SourceBranchName']) }}
    jobs:
    - deployment: Deploy_${{parameters.solution}}
      # variables:
      # - name: pathPrefix
      #   value: $(Pipeline.Workspace)
      pool:
        name: 'VM'
        demands:
        - node.js
        - VisualStudio
        - Python.Version
        - Agent.Name -equals $(VMName)
      environment: ${{ upper(variables['Build.SourceBranchName']) }}
      strategy:
        runOnce:
          deploy:
            steps:
            - template: ../${{parameters.folder}}/build/steps-deploy.yml
